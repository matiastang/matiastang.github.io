import{_ as s,c as a,a as e,o as n}from"./app-CS9K37Kg.js";const t={};function r(l,i){return n(),a("div",null,i[0]||(i[0]=[e('<h1 id="gunicorn和uvicorn" tabindex="-1"><a class="header-anchor" href="#gunicorn和uvicorn"><span>Gunicorn和Uvicorn</span></a></h1><p>WSGI：Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口。</p><p>Gunicorn 是一个使用 WSGI 标准的应用服务器。</p><p>Flask 和 DJango可以直接使用 Gunicorn 运行，但是FastAPI不能直接使用 Gunicorn，因为 FastAPI 使用最新的ASGI 标准。</p><p>Gunicorn 可以作为进程管理器使用，并且可以设定进程的类型，Uvicorn 可以作为 Gunicorn的进程类型。</p><p>使用这种组合，Gunicorn 将充当进程管理器，监听端口和IP。它会将接收到的数据传输到运行 Uvicorn 类的工作进程，然后，Uvicorn 将数据传输给 FastAPI。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">gunicorn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main:app</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --workers</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --worker-class</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> uvicorn.workers.UvicornWorker</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --bind</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0.0.0.0:8000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gunicorn 可以管理失效的进程，如果进程死掉会重启一个新的进程以维持工作进程的数量。</p><p>uvicorn 在单进程上使用异步协程是有优势的、但是如果接口方法是同步的则走的多进程模式、也就是 workers 的数量、 这个时候 uvicorn 不如 gunicorn、性能上会有些限制。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">uvicorn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main:app</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --host</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.0.0.0</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --port</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8000</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --workers</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',10)]))}const h=s(t,[["render",r],["__file","6atezhdj.html.vue"]]),c=JSON.parse('{"path":"/article/6atezhdj.html","title":"Gunicorn和Uvicorn","lang":"zh-CN","frontmatter":{"title":"Gunicorn和Uvicorn","createTime":"2025/01/21 10:11:04","permalink":"/article/6atezhdj.html","watermark":true},"headers":[],"readingTime":{"minutes":1.14,"words":343},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/fastapi/Gunicorn和Uvicorn.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"8ea922","sort":10008,"name":"fastapi"}],"bulletin":false}');export{h as comp,c as data};
