import{_ as e,c as t,a as i,o as a}from"./app-CS9K37Kg.js";const n={};function s(r,p){return a(),t("div",null,p[0]||(p[0]=[i('<h1 id="python多版本管理" tabindex="-1"><a class="header-anchor" href="#python多版本管理"><span>python多版本管理</span></a></h1><p><code>pyenv``python</code>版本管理 <code>pipenv``可以为我们的项目自动创建和管理一个虚拟环境</code><code>Virtualenv</code>创建<code>python</code>虚拟环境</p><ol><li></li></ol><p>使用brew安装pyenv 安装pyenv下的Anaconda</p><ol start="2"><li></li></ol><p>pyenv-virtualenv的虚拟环境</p><ol start="3"><li></li></ol><p><a href="https://github.com/kennethreitz/pipenv" target="_blank" rel="noopener noreferrer">pipenv</a></p><h3 id="pipenv" tabindex="-1"><a class="header-anchor" href="#pipenv"><span>pipenv</span></a></h3><p>Pipfile 与 Pipfile.lock 是社区拟定的依赖管理文件，用于替代过于简陋的 requirements.txt 文件. 过去大家经常使用virtualenv来创建虚拟环境，通过<code>pip freeze</code>生成<code>requirements.txt</code>文件，然后通过<code>pip install -r requirements.txt</code>进行项目模块的管理与安装。这样的安装存在很多问题，比如每次更新模块后，需要手动的重新生成依赖文件，等等问题</p><p>pipx install pipenv // 添加环境变量 pipx ensurepath // 刷新 source ~/.zshrc // 查看版本 pipenv --version</p><h3 id="pyenv" tabindex="-1"><a class="header-anchor" href="#pyenv"><span>pyenv</span></a></h3><p>pyenv是管理python版本的工具。安装pyenv后，可以管理各种python版本，并且各个版本的环境完全独立，互不干扰 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fpyenv%2Fpyenv" target="_blank" rel="noopener noreferrer">pyenv的github地址</a></p><h3 id="安装pipx" tabindex="-1"><a class="header-anchor" href="#安装pipx"><span>安装pipx</span></a></h3><p><a href="https://pypi.org/project/pipx/" target="_blank" rel="noopener noreferrer">pipx</a></p><p>pipx 是一种帮助您安装和运行用 Python 编写的最终用户应用程序的工具。它大致类似于 macOS 的brew、JavaScript 的<code>npx</code>和 Linux 的apt.</p><p>它与 pip 密切相关。事实上，它使用 pip，但专注于安装和管理可以直接作为应用程序从命令行运行的 Python 包。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>brew install pipx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>提示：Error opening archive: Failed to open</p><p><a href="https://github.com/Homebrew/brew/issues/11209" target="_blank" rel="noopener noreferrer">issues/11209</a></p><p>更新<code>brew</code>：brew update 后再：brew install pipx</p><h2 id="pip和pip3的安装" tabindex="-1"><a class="header-anchor" href="#pip和pip3的安装"><span>pip和pip3的安装</span></a></h2><p>pip 是一个 Python 包也是 Python 推荐的包管理程序，可以用于安装和管理 Python 包，Python 2.7.9+ 版本中已经自带了 pip 包。针对 Python 2 和 3，pip 分别提供了 pip 和 pip3 两个命令</p><h3 id="安装pip" tabindex="-1"><a class="header-anchor" href="#安装pip"><span>安装pip</span></a></h3><p>sudo easy_install pip</p><p>这个会默认安装pip2</p><p>pip是python的包管理工具，在Python2.7的安装包中，easy_install.py是默认安装的，而pip需要我们手动安装。 打开终端：</p><p>sudo easy_install pip</p><p>查看版本</p><p>pip --version</p><p>安装和更新pip</p><p>pip install --upgrade pip</p><h3 id="pip3" tabindex="-1"><a class="header-anchor" href="#pip3"><span>pip3</span></a></h3><p>在python3的路径下 curl https://bootstrap.pypa.io/get-pip.py | python3</p><p>查看相应的包</p><p>pip3 list</p><p>安装和更新pip</p><p>pip install --upgrade pip</p><p><strong>注意</strong></p><p>小知识: 使用easy_install或pip安装Python第三方库时,默认源地址是:https://pypi.python.org/simple/ 这是这个源有几个问题: 1.国外的网站访问速度比较慢. 2.使用该源遵循http协议,若机器上没有安装openssl或ssl配置不对,将导致easy_install或pip访问该源<br> 失败,若想解决这两个问题， 可以使用国内的PyPI镜像源(会定期的把国外的软件拷贝到这个库中)。 国内的一些pipy的镜像源: 1.清华源: https://pypi.tuna.tsinghua.edu.cn/simple 2.豆瓣源: https://pypi.douban.com/simple 3.pypi.hustunique.com</p><p>访问国内的pipy源时,安装命令为: pip install 库名==1.11.11 -i https://pypi.tuna.tsinghua.edu.cn/simple</p>',41)]))}const l=e(n,[["render",s],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/article/0jd8av3w/","title":"python多版本管理","lang":"zh-CN","frontmatter":{"title":"python多版本管理","createTime":"2025/01/21 15:30:36","permalink":"/article/0jd8av3w/","watermark":true},"headers":[],"readingTime":{"minutes":2.51,"words":753},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/python多版本管理.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"0d4964","sort":10032,"name":"python"}],"bulletin":false}');export{l as comp,h as data};
