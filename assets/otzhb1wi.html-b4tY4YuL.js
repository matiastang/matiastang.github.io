import{_ as i,c as e,a,o as n}from"./app-CS9K37Kg.js";const t={};function h(l,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><code>nohup</code> 英文全称 <code>no hang up</code>（不挂起，不挂断），用于在系统后台不挂断地运行命令，退出终端不会影响程序的运行。</p><p><code>nohup</code> 命令，在默认情况下（非重定向时），会输出一个名叫 <code>nohup.out</code> 的文件到当前目录下，如果当前目录的 <code>nohup.out</code> 文件不可写，输出重定向到 <code>$HOME/nohup.out</code> 文件中。</p><p><strong>提示</strong> 命令行默认启动的一些服务在退出终端后就会停止，使用<code>nohup</code>命令在执行时，会自动忽略<code>SIGHUP</code>信号，所以当终端关闭时，<code>nohup</code>命令仍会继续执行，常用<code>nohup</code>来启动一些服务。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Command</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [Arg] </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[&amp;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数：</p><ul><li><code>Command</code>：要执行的命令。</li><li><code>Arg</code>：一些参数，可以指定输出文件。</li><li><code>&amp;</code>：让命令在后台执行，终端退出后命令仍旧执行。</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="默认输出文件" tabindex="-1"><a class="header-anchor" href="#默认输出文件"><span>默认输出文件</span></a></h3><p>在执行命令<code>nohup sh xxx.sh &amp;</code>的时候，提示：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nohup:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ignoring</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> input</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> and</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> appending</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> output</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> \`</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nohup.out’</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>意思是 ：忽略输入并将输出附加到<code>nohup.out</code>文件中。这个只是没有指定输出文件，默认输出到<code>nohup.out</code>文件中的一个提示。如果不想要这个提示可以指定一个输出文件。</p><p><strong>注意</strong> 如果不想输出内容，可以设置输出文件为<code>/dev/null</code>，<code>/dev/null</code>是一个特殊的文件，写入到它的内容都会被丢弃。</p><h3 id="重定向输出" tabindex="-1"><a class="header-anchor" href="#重定向输出"><span>重定向输出</span></a></h3><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./main.py</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">output.out</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 2&gt;&amp;1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>Linux</code>中的<code>0</code>表示标准输入，<code>1</code>表示标准输出，<code>2</code>表示标准错误输出。</p><ul><li><code>output.out</code>是输出的文件，默认是<code>nohup.out</code></li><li><code>2&gt;&amp;1</code> ，<code>2</code>是标准错误输出，<code>1</code>是标准输出，这里的<code>&amp;</code>表示引用的意思，对标准输出的引用。<code>&gt;</code>左右不能有空格，即将错误内容重定向输入到标准输出中去。</li><li><code>&amp;</code>表示为后台运行</li></ul><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test.py</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">output.out</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 2&gt;&amp;1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里<code>&gt;&gt;</code>的意思是追加，意思是将标准输出和标准错误输出都追加到<code>output.out</code>文件中。 上面的<code>&gt;</code>的意思是覆盖追加，意思是将标准输出和标准错误输出都覆盖写到<code>output.out</code>文件中。</p><p><strong>注意</strong>如果不指定日志文件则会创建默认文件<code>nohup.out</code></p><p>命令会输出创建进程的<code>PID</code>。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./wl_apscheduler.py</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> 82531</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">appending</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> output</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup.out</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong> 当你成功地提交进程以后，就会显示出一个进程号，可以用它来监控或杀死该进程。(查看：<code>ps -ef | grep 进程号</code>、杀死<code>kill -9 进程号</code>)</p><h3 id="查看nohup-out" tabindex="-1"><a class="header-anchor" href="#查看nohup-out"><span>查看<code>nohup.out</code></span></a></h3><p>查看<code>nohup.out</code>可以了解进程在执行过程中的输出情况。如果进程执行成功，则<code>nohup.out</code>文件中会显示<code>nohup</code>命令的输出内容。如果进程执行失败，则<code>nohup.out</code>文件中会显示进程执行失败的原因。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> tail</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nohup.out</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="不使用nohup和使用nohup的对比" tabindex="-1"><a class="header-anchor" href="#不使用nohup和使用nohup的对比"><span>不使用<code>nohup</code>和使用<code>nohup</code>的对比</span></a></h3><ul><li>使用<code>sh nohup.sh</code>执行，当前命令行就会<code>hang</code>住。</li><li>使用<code>sh nohup.sh &amp;</code> 执行，就会把作业提交到后台，释放当前命令行，同时显示了进程号。但是如果帮当前命令窗口关闭，整个作业就停止了。</li><li>使用<code>nohup sh nohup.sh &gt;log 2&gt;&amp;1 &amp;</code>，同样把作业提交到后台，释放当前窗口，而且即使把当前命令窗口关闭，作业仍然运行。</li></ul><p><strong>提示</strong> 可以使用<code>ps -fe | grep 82531</code>也可以使用文件名称过滤<code>ps -ef | grep nohup.sh</code> 来查看后台作业运行情况。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ps</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fe</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82531</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  501</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82531</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 38435</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10:27AM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ttys009</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    0:00.16</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./wl_apscheduler.py</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  501</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82702</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 38435</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">   0</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10:29AM</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ttys009</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">    0:00.00</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> grep</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --color=auto</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.bzr</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=CVS</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.git</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.hg</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.svn</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.idea</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --exclude-dir=.tox</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 82531</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nohup命令在shell脚本无法执行问题" tabindex="-1"><a class="header-anchor" href="#nohup命令在shell脚本无法执行问题"><span><code>nohup</code>命令在<code>shell</code>脚本无法执行问题</span></a></h3><p>我们希望在脚本中使用<code>nohup</code>来启动一个进程，但是发现<code>nohup</code>命令无法执行，提示找不到环境变量。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">#/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello world</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在脚本中加上 <code>source /etc/profile</code> 就好了</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">#/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/profile</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nohup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello world</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为找不到环境变量，所以先<code>source</code>一下就行了。</p><p><strong>注意</strong> 在<code>ssh</code>远程的时候执行<code>nohup</code>命令，也是无法获取被远程机器的环境变量的。也需要添加<code>source /etc/profile</code></p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://www.runoob.com/linux/linux-comm-nohup.html" target="_blank" rel="noopener noreferrer">Linux nohup命令</a></p>`,40)]))}const p=i(t,[["render",h],["__file","otzhb1wi.html.vue"]]),o=JSON.parse('{"path":"/linux/otzhb1wi.html","title":"Linux nohup","lang":"zh-CN","frontmatter":{"title":"Linux nohup","createTime":"2025/01/11 17:09:45","permalink":"/linux/otzhb1wi.html","watermark":true},"headers":[],"readingTime":{"minutes":3.62,"words":1087},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/linux/nohup.md","bulletin":false}');export{p as comp,o as data};
