import{_ as d,c as o,a as n,b as e,d as i,e as t,f as l,r as h,o as p}from"./app-CS9K37Kg.js";const c={};function k(r,s){const a=h("RouteLink");return p(),o("div",null,[s[13]||(s[13]=n(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>当使用 <code>GitHub API</code> 或命令行时，可使用 <code>Personal access token</code> 替代密码向 <code>GitHub</code> 进行身份验证。 <code>Personal access token</code> 旨在代表你自己访问 <code>GitHub</code> 资源。</p><h2 id="生成access-token" tabindex="-1"><a class="header-anchor" href="#生成access-token"><span>生成<code>access token</code></span></a></h2><p>现在有两种生产<code>token</code>的方式：</p><ul><li>一种是<code>Fine-grained tokens</code>，这种还处于预览阶段。</li><li>一种是<code>Tokens（classic）</code>。</li></ul><h3 id="fine-grained-tokens" tabindex="-1"><a class="header-anchor" href="#fine-grained-tokens"><span>Fine-grained tokens</span></a></h3><ol><li>登录<code>github</code>账号。</li><li>点击进入账号的<code>Setting</code>。</li><li>点击<code>Developer settings</code>。</li><li>下拉<code>Personal access tokens</code>选择<code>Fine-grained tokens</code>。</li><li>点击<code>Generage new token</code>。</li><li>随便填写一个<code>token</code>名称。</li><li>选择过期时间，也可以选择永久。</li><li>可以添加备注。</li><li>选择权限，根据需求选择权限，这里可以设置为某一个项目，然后再选择权限。</li><li>点击生成<code>token</code>就行了。</li></ol><p><strong>注意</strong>需要保存好生成的<code>token</code>，刷新页面就没了。</p><h3 id="tokens-classic" tabindex="-1"><a class="header-anchor" href="#tokens-classic"><span>Tokens（classic）</span></a></h3><ol><li>登录<code>github</code>账号。</li><li>点击进入账号的<code>Setting</code>。</li><li>点击<code>Developer settings</code>。</li><li>下拉<code>Personal access tokens</code>选择<code>Tokens（classic）</code>。</li><li>下拉<code>Generage new token</code>选择<code>Generage new token（classic）</code>。</li><li>随便填写一个<code>token</code>名称。</li><li>选择过期时间，也可以选择永久。</li><li>选择权限，根据需求选择权限。</li><li>点击生成<code>token</code>就行了。</li></ol><p><strong>注意</strong>需要保存好生成的<code>token</code>，刷新页面就没了。</p><h2 id="使用access-token" tabindex="-1"><a class="header-anchor" href="#使用access-token"><span>使用<code>access token</code></span></a></h2><p><code>access token</code>是用于认证的，有多种使用方式：</p><ul><li>将<code>access token</code>当做密码使用</li><li>在<code>CI/CD</code>自动部署时使用<code>token</code>获取权限</li></ul><h3 id="access-token当做密码" tabindex="-1"><a class="header-anchor" href="#access-token当做密码"><span><code>access token</code>当做密码</span></a></h3><p>进行<code>git</code>命令行提交的时候，会让你输入<code>Username</code>和<code>Password</code></p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Username</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://github.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Password</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://username@github.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 你的token</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接把<code>token</code>当做<code>Password</code>输入即可。</p><h3 id="直接更改-git-config文件-不推荐" tabindex="-1"><a class="header-anchor" href="#直接更改-git-config文件-不推荐"><span>直接更改<code>.git/config</code>文件 （不推荐）</span></a></h3><p><strong>注意</strong>：不建议使用这种方式使用，会泄露<code>token</code>。</p><ol><li>直接修改<code>.git</code>文件</li></ol><p><code>.git/config</code>是隐藏文件。需要显示出来，<code>mac</code> 快捷键是<code>control + cmd + .</code></p><p>修改 <code>remote</code> 中的 <code>url</code> 为:</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>通过命令更新</li></ol><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> set-url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或：删除现在的远程分支，然后创建新的远程分支。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中： <code>TOKEN</code>是上面申请的<code>token</code>。 <code>USER</code>是用户名。 <code>REPO</code>是仓库名。</p><h3 id="配置ci-cd自动部署时使用access-token" tabindex="-1"><a class="header-anchor" href="#配置ci-cd自动部署时使用access-token"><span>配置<code>CI/CD</code>自动部署时使用<code>access token</code></span></a></h3><p>虽然<code>access token</code>能当密码使用，但是一般我们长期使用都是添加公钥到仓库的，这样在本机上就能完成身份认证了。 虽然通过更改<code>.git/config</code>中的远程地址，达到了使用<code>token</code>关联到了仓库，但是上面也说了会有暴露的风险。 <code>token</code>的主要使用地方还是在配置<code>CI/CD</code>自动部署时。</p>`,31)),e("p",null,[s[2]||(s[2]=i("如下是")),t(a,{to:"/github/sj4lt68r/"},{default:l(()=>s[0]||(s[0]=[i("github actions")])),_:1}),s[3]||(s[3]=i("的一个")),s[4]||(s[4]=e("code",null,".yml",-1)),s[5]||(s[5]=i("配置，里面就使用了")),s[6]||(s[6]=e("code",null,"token",-1)),s[7]||(s[7]=i("。只是为了避免")),s[8]||(s[8]=e("code",null,"token",-1)),s[9]||(s[9]=i("暴露，通过配置项目的")),t(a,{to:"/github/9f26um3n/"},{default:l(()=>s[1]||(s[1]=[i("secrets")])),_:1}),s[10]||(s[10]=i("来访问配置的")),s[11]||(s[11]=e("code",null,"token",-1)),s[12]||(s[12]=i("的。"))]),s[14]||(s[14]=n(`<div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> vueperss deploy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">jobs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  build-and-deploy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    runs-on</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    steps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> checkout</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      uses</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> actions/checkout@master</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> vueperss build and deploy</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> |</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        yarn install</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        yarn docs:build</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        cd docs/.vuepress/dist</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git init</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git config --global user.email \${{ secrets.MT_EMAIL }}</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git config --global user.name \${{ secrets.MT_NAME }}</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git add -A</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git commit -m &#39;Auto deploy from Github Actions&#39;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        git push -f https://\${{ secrets.MT_TOKEN }}@github.com/matiastang/matiastang.github.io master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener noreferrer">Github access token</a></p>`,3))])}const u=d(c,[["render",k],["__file","ptv873ne.html.vue"]]),m=JSON.parse('{"path":"/github/ptv873ne.html","title":"Github Tokens","lang":"zh-CN","frontmatter":{"title":"Github Tokens","createTime":"2025/01/02 16:06:52","permalink":"/github/ptv873ne.html","watermark":true},"headers":[],"readingTime":{"minutes":2.77,"words":830},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/github/tokens.md","bulletin":false}');export{u as comp,m as data};
