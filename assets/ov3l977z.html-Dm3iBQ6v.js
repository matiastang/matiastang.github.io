import{_ as i,c as a,a as n,o as e}from"./app-CS9K37Kg.js";const t={};function h(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p>NumPy 是 Python 中科学计算的基本包。它是一个 Python 库，提供多维数组对象、各种派生对象（例如掩码数组和矩阵）以及用于对数组进行快速作的各种例程，包括数学、逻辑、形状作、排序、选择、I/O、离散傅里叶变换、基本线性代数、基本统计运算、随机模拟等等。</p><p>NumPy 包的核心是 ndarray 对象。这封装了同构数据类型的 n 维数组，为了提高性能，许多作都在编译代码中执行。NumPy 数组和标准 Python 序列之间有几个重要的区别：</p><ul><li>NumPy 数组在创建时具有固定大小，这与 Python 列表不同（Python 列表可以动态增长）。更改 ndarray 的大小将创建一个新数组并删除原始数组。</li><li>NumPy 数组中的元素都必须具有相同的数据类型，因此在内存中的大小相同。例外：可以有 （Python，包括 NumPy） 对象的数组，从而允许不同大小的元素的数组。</li><li>NumPy 数组有助于对大量数据进行高级数学和其他类型的作。通常，与使用 Python 的内置序列相比，此类作的执行效率更高，代码更少。</li><li>越来越多的基于 Python 的科学和数学包正在使用 NumPy 数组;尽管这些通常支持 Python 序列输入，但它们会在处理之前将此类 input 转换为 NumPy 数组，并且它们通常会输出 NumPy 数组。换句话说，为了有效地使用当今大部分（甚至大部分）基于 Python 的科学/数学软件，仅仅知道如何使用 Python 的内置序列类型是不够的——还需要知道如何使用 NumPy 数组。</li></ul><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><h3 id="矢量化" tabindex="-1"><a class="header-anchor" href="#矢量化"><span>矢量化</span></a></h3><h3 id="广播" tabindex="-1"><a class="header-anchor" href="#广播"><span>广播</span></a></h3><h2 id="pandas-vs-numpy" tabindex="-1"><a class="header-anchor" href="#pandas-vs-numpy"><span>Pandas vs NumPy</span></a></h2><p>Pandas 是基于 NumPy 的，它提供了更高级的数据结构和操作，例如 DataFrame 和 Series，可以更方便地处理表格数据。</p><p>NumPy 是一个用于科学计算的库，提供了高性能的多维数组对象和大量的数学函数，可以用于数值计算、线性代数、随机数生成等。</p><p>Pandas 和 NumPy 的主要区别在于它们的数据结构和操作方式：</p><ul><li>NumPy 提供的是多维数组对象（ndarray），可以用于存储和操作数值数据。NumPy 的数组对象支持大量的数学函数和操作，例如矩阵运算、线性代数、随机数生成等。</li><li>Pandas 提供的是 DataFrame 和 Series 数据结构，可以用于存储和操作表格数据。DataFrame 是一个二维的表格数据结构，类似于 Excel 表格或者 SQL 表。Series 是一维的序列数据结构，类似于一列数据。Pandas 提供了大量的函数和方法，可以方便地进行数据清洗、处理、分析和可视化等操作。</li></ul><h2 id="gpu支持" tabindex="-1"><a class="header-anchor" href="#gpu支持"><span>GPU支持</span></a></h2><p>原生的 NumPy 不支持 直接使用 GPU，因为 NumPy 主要是基于 CPU 计算的，它的核心计算库是 BLAS（Basic Linear Algebra Subprograms） 和 LAPACK，这些库通常运行在 CPU 上。</p><p>如果你想在 GPU 上加速 NumPy 计算，可以使用<code>CuPy</code>、<code>JAX</code>等GPU 加速库。</p><h3 id="cupy" tabindex="-1"><a class="header-anchor" href="#cupy"><span>CuPy</span></a></h3><p>几乎完全兼容 NumPy，但计算会在 GPU 上运行。 只需要把 numpy 替换为 cupy，大多数代码不需要修改。</p><p>安装：</p><div class="language-py line-numbers-mode" data-ext="py" data-title="py"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pip install cupy</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cuda12x  </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 适用于 CUDA 12.x（适配你的 CUDA 版本）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例：</p><div class="language-py line-numbers-mode" data-ext="py" data-title="py"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> cupy </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> cp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">x </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> cp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">x </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">**</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # GPU 计算</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jax" tabindex="-1"><a class="header-anchor" href="#jax"><span>JAX</span></a></h3><p>由 Google 开发，支持 NumPy API，同时支持 GPU 和 TPU 计算。</p><p>安装：</p><div class="language-py line-numbers-mode" data-ext="py" data-title="py"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pip install jax jaxlib</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例：</p><div class="language-py line-numbers-mode" data-ext="py" data-title="py"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> jax</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">numpy </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> jnp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">x </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> jnp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">array</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">([</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">x </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">**</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 自动加速到 GPU（如果可用）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pytorch-tensorflow" tabindex="-1"><a class="header-anchor" href="#pytorch-tensorflow"><span>PyTorch / TensorFlow</span></a></h3><p>如果你用 NumPy 进行 深度学习或大规模计算，可以考虑 PyTorch 或 TensorFlow，它们的 tensor 计算可以在 GPU 上运行。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://numpy.org/" target="_blank" rel="noopener noreferrer">Numpy</a></p>`,30)]))}const r=i(t,[["render",h],["__file","ov3l977z.html.vue"]]),k=JSON.parse('{"path":"/python/ov3l977z.html","title":"Numpy","lang":"zh-CN","frontmatter":{"title":"Numpy","createTime":"2025/03/27 15:27:06","permalink":"/python/ov3l977z.html","watermark":true},"headers":[],"readingTime":{"minutes":3.35,"words":1005},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/Numpy.md","bulletin":false}');export{r as comp,k as data};
