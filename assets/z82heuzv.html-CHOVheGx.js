import{_ as s,c as a,a as e,o as n}from"./app-CS9K37Kg.js";const t={};function l(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<p>Pixi 是一个用于管理 Python 环境的工具，它可以帮助你创建、激活、切换和管理多个 Python 环境。Pixi构建在Conda生态系统之上，为开发者带来了类似 cargo 或 yarn 的出色体验，但它的适用范围更广，支持多种编程语言。</p><p><strong>除了</strong> Pixi还有另一个现代Python环境管理工具UV</p><h2 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性：</span></a></h2><ul><li>与conda-forge的原生集成</li><li>支持PyPI包管理（通过UV实现）</li><li>提供项目级环境隔离</li><li>多语言兼容：包括 Python、C++ 和 R 在内的多种语言支持，利用 Conda 包进行集成。</li><li>跨平台支持：在 Linux、Windows 和 macOS（包括 Apple Silicon）上均可运行。</li><li>锁定文件自动更新：始终保证你的依赖关系记录最新。</li><li>简洁的 CLI：提供与 Cargo 类似的直观命令行接口。</li><li>项目特定或全局安装：工具可以按需安装在单个项目内或系统范围内。</li><li>纯 Rust 实现：依赖于强大的 rattler 库构建。</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>Linux/MacOS安装：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -fsSL</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://pixi.sh/install.sh</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows安装：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> powershell</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -ExecutionPolicy</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ByPass</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -c</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">iwr -useb https://pixi.sh/install.ps1 | iex</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="项目管理" tabindex="-1"><a class="header-anchor" href="#项目管理"><span>项目管理</span></a></h3><p>项目初始化：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> project-name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>依赖管理：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> project-name</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3.12</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目结构</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> project-name/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ├──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .gitattributes</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ├──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .gitignore</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ├──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .pixi/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ├──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi.lock</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> └──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi.toml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="包管理" tabindex="-1"><a class="header-anchor" href="#包管理"><span>包管理</span></a></h3><h3 id="pixi支持多源包管理" tabindex="-1"><a class="header-anchor" href="#pixi支持多源包管理"><span>Pixi支持多源包管理：</span></a></h3><p>conda-forge包管理（默认）</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> project</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cannel</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>PyPI集成</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --pypi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> black</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>开发环境使用</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="脚本执行" tabindex="-1"><a class="header-anchor" href="#脚本执行"><span>脚本执行</span></a></h4><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pixi</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> script.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="uv和pixi的技术对比" tabindex="-1"><a class="header-anchor" href="#uv和pixi的技术对比"><span>UV和Pixi的技术对比</span></a></h2><h3 id="uv特点" tabindex="-1"><a class="header-anchor" href="#uv特点"><span>UV特点</span></a></h3><ol><li>高性能实现</li></ol><p>Rust编写的核心组件 优化的依赖解析算法</p><ol start="2"><li>原生PyPI集成</li></ol><p>无中间层依赖</p><ol start="3"><li>标准化配置</li></ol><p>支持pyproject.toml 可生成requirements.txt</p><h3 id="pixi特点" tabindex="-1"><a class="header-anchor" href="#pixi特点"><span>Pixi特点</span></a></h3><ol><li>Conda生态系统集成</li></ol><p>支持conda-forge包 二进制包分发优势</p><ol start="2"><li>混合包管理</li></ol><p>同时支持conda和PyPI UV作为PyPI包管理器</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>UV和Pixi代表了Python环境管理工具的两种不同技术路线。 UV专注于提供高性能的原生PyPI包管理解决方案 Pixi则致力于桥接Conda生态系统和PyPI。</p><p>选择时应考虑项目具体需求：</p><p>对性能要求高的项目建议选择UV 需要Conda生态系统支持的项目可考虑Pixi 标准Python项目开发推荐使用UV</p><p>所以如果主要应用于深度学习方向，并且需要迁移conda环境的话，可以优先考虑Pixi，因为有一些深度学习的库conda安装要方便很多，但是UV作为项目管理（比如作为web服务器）的模式却是一个很好的发展方向，所以如果你有兴趣可以持续关注。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://pixi.sh/latest/" target="_blank" rel="noopener noreferrer">Pixi 文档</a></p><p><a href="https://github.com/prefix-dev/pixi" target="_blank" rel="noopener noreferrer">GitHub Pixi</a></p>`,48)]))}const d=s(t,[["render",l],["__file","z82heuzv.html.vue"]]),r=JSON.parse('{"path":"/python/z82heuzv.html","title":"Pixi进行Python环境管理","lang":"zh-CN","frontmatter":{"title":"Pixi进行Python环境管理","createTime":"2025/03/21 15:31:47","permalink":"/python/z82heuzv.html","watermark":true},"headers":[],"readingTime":{"minutes":2.51,"words":752},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/Pixi进行Python环境管理.md","bulletin":false}');export{d as comp,r as data};
