import{_ as t,c as a,a as n,o as s}from"./app-CS9K37Kg.js";const i={};function r(o,e){return s(),a("div",null,e[0]||(e[0]=[n(`<ul><li><a href="#python2%E4%B8%8Epython3">python2与python3</a><ul><li><a href="#typing%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%9C%E7%94%A8">typing模块的作用</a></li><li><a href="#syntaxerror-non-ascii-character-%5Cxe7">SyntaxError: Non-ASCII character &#39;\\xe7&#39;</a></li><li><a href="#typeerror-a-bytes-like-object-is-required-not-str">TypeError: a bytes-like object is required, not &#39;str&#39;</a></li></ul></li></ul><h1 id="python2与python3" tabindex="-1"><a class="header-anchor" href="#python2与python3"><span>python2与python3</span></a></h1><h2 id="typing模块的作用" tabindex="-1"><a class="header-anchor" href="#typing模块的作用"><span>typing模块的作用</span></a></h2><p><a href="https://docs.python.org/zh-cn/3/library/typing.html#module-typing" target="_blank" rel="noopener noreferrer">官网typing详细说明</a></p><p>自python3.5开始，PEP484为python引入了类型注解(type hints)</p><ul><li>类型检查，防止运行时出现参数和返回值类型、变量类型不符合。</li><li>作为开发文档附加说明，方便使用者调用时传入和返回参数类型。</li><li>该模块加入后并不会影响程序的运行，不会报正式的错误，只有提醒pycharm目前支持typing检查，参数类型错误会黄色提示</li></ul><h2 id="syntaxerror-non-ascii-character-xe7" tabindex="-1"><a class="header-anchor" href="#syntaxerror-non-ascii-character-xe7"><span>SyntaxError: Non-ASCII character &#39;\\xe7&#39;</span></a></h2><p>python2运行时报错：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>SyntaxError: Non-ASCII character &#39;\\xe7&#39; in file python_encod_decode.py on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当在Python 2.X文件中写中文注释或输出中文时候，经常会出现编译错误（在Python 3.X中没有这种错误。）这是因为Python 2.X的默认编码文件是用ASCII码</p><p>头部加上如下代码：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>#coding=utf-8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="typeerror-a-bytes-like-object-is-required-not-str" tabindex="-1"><a class="header-anchor" href="#typeerror-a-bytes-like-object-is-required-not-str"><span>TypeError: a bytes-like object is required, not &#39;str&#39;</span></a></h2><p>python3和Python2在套接字返回值解码上有区别。</p><p>解决办法非常的简单，只需要用上python的bytes和str两种类型转换的函数encode()、decode()即可！</p><p>str通过encode()方法可以编码为指定的bytes； 反过来，如果我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str，就需要用decode()方法；</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>str = &#39;this is fujieace.com test&#39;</span></span>
<span class="line"><span>os.write(fd,bytes(str,&#39;UTF-8&#39;))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,17)]))}const l=t(i,[["render",r],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/article/qovzlcn5/","title":"python2与python3","lang":"zh-CN","frontmatter":{"title":"python2与python3","createTime":"2025/01/21 15:30:36","permalink":"/article/qovzlcn5/","watermark":true},"headers":[],"readingTime":{"minutes":1.4,"words":420},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/python2与python3.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"0d4964","sort":10032,"name":"python"}],"bulletin":false}');export{l as comp,c as data};
