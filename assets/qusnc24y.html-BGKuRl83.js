import{_ as t,c as o,a,o as c}from"./app-CS9K37Kg.js";const d={};function s(r,e){return c(),o("div",null,e[0]||(e[0]=[a('<h1 id="cuda编程" tabindex="-1"><a class="header-anchor" href="#cuda编程"><span>CUDA编程</span></a></h1><p><a href="https://zhuanlan.zhihu.com/p/681754807" target="_blank" rel="noopener noreferrer">CUDA编程基础</a></p><p>典型的CUDA程序的执行流程：</p><p>分配 device 内存； 将数据从 host 内存拷贝到 device 上； 调用 CUDA 的核函数在 device 上完成指定的运算； 将 device 上的运算结果拷贝到 host 上； 释放 device 内存。 由于 GPU 实际上是异构模型，所以需要区分 host 和 device 上的代码，在 CUDA 中是通过函数类型限定词来区分 host 和 device 上的函数，主要的三个函数类型限定词如下：</p><p><code>__global__</code>：在 device 上执行，从 host 中调用（一些特定的 GPU 也可以从 device 上调用）。 <code>__device__</code>：在 device 上执行，但仅可以从 device 中调用，不可以和<code>__global__</code>同时用。 <code>__host__</code>：在 host 上执行，仅可以从 host 上调用，一般省略不写，不可以和 <code>__global__</code>同时用，但可和<code>__device__</code>同时用，此时函数会在 device 和 host 都编译。</p>',5)]))}const n=t(d,[["render",s],["__file","qusnc24y.html.vue"]]),l=JSON.parse('{"path":"/llm/modelscope/qusnc24y.html","title":"CUDA编程","lang":"zh-CN","frontmatter":{"title":"CUDA编程","createTime":"2025/02/07 17:14:12","permalink":"/llm/modelscope/qusnc24y.html","watermark":true},"headers":[],"readingTime":{"minutes":0.89,"words":267},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/CUDA编程.md","bulletin":false}');export{n as comp,l as data};
