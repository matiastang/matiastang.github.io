import{_ as l,c as a,a as d,b as i,d as s,e as t,f as n,r,o as c}from"./app-CS9K37Kg.js";const p={};function h(u,e){const o=r("RouteLink");return c(),a("div",null,[e[29]||(e[29]=d('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><code>GitHub</code>于 <code>2021</code>年<code>8</code>月<code>13</code>日起不再支持密码验证登录。</p><p>可以选择如下两种方式登录：</p><ol><li><code>Token</code> 登录</li><li><code>SSH</code> 免密登录</li></ol><p><code>GitHub</code>提供了<code>HTTPS</code>、<code>SSH</code>、<code>GitHub CLI</code>的方式来拉取或提交代码。</p><p><code>HTTPS</code>的远程地址如：<code>https://github.com/[USER]/[REPO]</code><code>SSH</code>的远程地址如：<code>git@github.com:[USER]/[REPO]</code></p><h2 id="token-登录" tabindex="-1"><a class="header-anchor" href="#token-登录"><span><code>Token</code> 登录</span></a></h2><p>使用<code>Github</code>的<code>Token</code>登录，需要先申请<code>Token</code>，然后在需要登录的地方使用<code>Token</code>登录。</p><h3 id="添加github-access-token" tabindex="-1"><a class="header-anchor" href="#添加github-access-token"><span>添加<code>GitHub Access Token</code></span></a></h3><p>现在有两种生产<code>token</code>的方式：</p><ul><li>一种是<code>Fine-grained tokens</code>，这种还处于预览阶段。</li><li>一种是<code>Tokens（classic）</code>。</li></ul><h4 id="fine-grained-tokens" tabindex="-1"><a class="header-anchor" href="#fine-grained-tokens"><span><code>Fine-grained tokens</code></span></a></h4><ol><li>登录<code>github</code>账号。</li><li>点击进入账号的<code>Setting</code>。</li><li>点击<code>Developer settings</code>。</li><li>下拉<code>Personal access tokens</code>选择<code>Fine-grained tokens</code>。</li><li>点击<code>Generage new token</code>。</li><li>随便填写一个<code>token</code>名称。</li><li>选择过期时间，也可以选择永久。</li><li>可以添加备注。</li><li>选择权限，根据需求选择权限，这里可以设置为某一个项目，然后再选择权限。</li><li>点击生成<code>token</code>就行了。</li></ol><p><strong>注意</strong>需要保存好生成的<code>token</code>，刷新页面就没了。</p><h4 id="tokens-classic" tabindex="-1"><a class="header-anchor" href="#tokens-classic"><span><code>Tokens（classic）</code></span></a></h4><ol><li>登录<code>github</code>账号。</li><li>点击进入账号的<code>Setting</code>。</li><li>点击<code>Developer settings</code>。</li><li>下拉<code>Personal access tokens</code>选择<code>Tokens（classic）</code>。</li><li>下拉<code>Generage new token</code>选择<code>Generage new token（classic）</code>。</li><li>随便填写一个<code>token</code>名称。</li><li>选择过期时间，也可以选择永久。</li><li>选择权限，根据需求选择权限。</li><li>点击生成<code>token</code>就行了。</li></ol><p><strong>注意</strong>需要保存好生成的<code>token</code>，刷新页面就没了。</p>',17)),i("p",null,[e[1]||(e[1]=s("具体可参考")),t(o,{to:"/github/ptv873ne.html"},{default:n(()=>e[0]||(e[0]=[s("Github Tokens")])),_:1})]),e[30]||(e[30]=d(`<h3 id="使用token登录" tabindex="-1"><a class="header-anchor" href="#使用token登录"><span>使用<code>Token</code>登录</span></a></h3><p>生成的<code>token</code>就相当于密码，后续需要密码的时候用<code>token</code>替换。</p><h4 id="直接输入token登录" tabindex="-1"><a class="header-anchor" href="#直接输入token登录"><span>直接输入<code>TOKEN</code>登录</span></a></h4><p>在进行<code>git push</code>命令行提交的时候，会让你输入<code>Username</code>和<code>Password</code></p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Username</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://github.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> username</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Password</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://username@github.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 你的token</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接把<code>token</code>当做<code>Password</code>输入。</p><h4 id="在uri中配置token登录" tabindex="-1"><a class="header-anchor" href="#在uri中配置token登录"><span>在<code>URI</code>中配置<code>TOKEN</code>登录</span></a></h4><p>我们知道<code>URI</code>的完整格式为：<code>[scheme]://[user]:[passwd]@[host]:[port][path][?query][#fragment]</code>所以我们可以直接在关联的远程地址中配置上<code>token</code>就能直接完成提交了。</p><ol><li>直接修改<code>.git/config</code>文件</li></ol><p><code>.git/config</code>是隐藏文件。需要显示出来，<code>mac</code> 快捷键是<code>control + cmd + .</code></p><p><code>vim</code>修改<code>.git/config</code>文件：<code>remote</code> 中的 <code>url</code> 为:</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>TOKEN</code>是上面申请的<code>token</code>。</li><li><code>USER</code>是用户名。</li><li><code>REPO</code>是仓库名。</li></ul><p><strong>注意</strong>：不建议在<code>.git/config</code>文件中的<code>url</code>中添加<code>TOKEN</code>等方式登录，<code>.git</code>文件夹是会提交到远程的，公开的项目会泄露<code>token</code>。</p><ol start="2"><li>通过命令更新</li></ol><p>修改远程地址的方法除了直接修改<code>.git/config</code>文件，还可以通过命令行的方式修改。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> set-url</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以删除现在的远程分支，然后创建新的远程分支。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ git remote remove origin</span></span>
<span class="line"><span>$ git remote add origin https://[TOKEN]@github.com/[USER]/[REPO]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：不建议使用在关联的远程地址中配置<code>token</code>的方式完成登录，公开的项目同样会泄露<code>token</code>。</p><h3 id="延伸" tabindex="-1"><a class="header-anchor" href="#延伸"><span>延伸</span></a></h3>`,21)),i("p",null,[e[5]||(e[5]=i("code",null,"Token",-1)),e[6]||(e[6]=s("不只在登录")),e[7]||(e[7]=i("code",null,"Github",-1)),e[8]||(e[8]=s("时可以使用，更多的使用场景是配置在")),t(o,{to:"/github/9f26um3n.html"},{default:n(()=>e[2]||(e[2]=[i("code",null,"Github Secrets",-1)])),_:1}),e[9]||(e[9]=s("中，然后配合")),t(o,{to:"/github/sj4lt68r.html"},{default:n(()=>e[3]||(e[3]=[i("code",null,"GitHub Actions",-1)])),_:1}),e[10]||(e[10]=s("来获取")),e[11]||(e[11]=i("code",null,"Github",-1)),e[12]||(e[12]=s("的某些权限，已完成对应的")),e[13]||(e[13]=i("code",null,"Actions",-1)),e[14]||(e[14]=s("，如：自动发布")),t(o,{to:"/github/7oj1j32r.html"},{default:n(()=>e[4]||(e[4]=[i("code",null,"GitHub Pages",-1)])),_:1}),e[15]||(e[15]=s("页面等。"))]),e[31]||(e[31]=d('<p><strong>注意</strong> 默认情况下，<code>GitHub Pages</code> 站点在互联网上是公开可用的，即使站点的存储库是<strong>私有的</strong>或<strong>内部的</strong>。如果您的项目网站是从使用 <code>GitHub</code> 企业云的组织拥有的私有或内部存储库发布的，则可以管理该网站的访问控制，在具有托管用户的企业中，所有 <code>GitHub Pages</code> 网站都是私下发布的。否则可能需要在发布之前删除存储库中有敏感数据。</p><h2 id="ssh-免密登录" tabindex="-1"><a class="header-anchor" href="#ssh-免密登录"><span><code>SSH</code> 免密登录</span></a></h2><p>除了上面说的使用<code>Token</code>登录，更推荐的方式是<code>SSH</code>免密登录。</p><p><a href="https://matiastang.github.io/ssh/login" target="_blank" rel="noopener noreferrer">ssh login</a></p><h3 id="windows免密登录github" tabindex="-1"><a class="header-anchor" href="#windows免密登录github"><span><code>Windows</code>免密登录<code>Github</code></span></a></h3>',5)),i("p",null,[e[17]||(e[17]=i("code",null,"Windows",-1)),e[18]||(e[18]=s("的免密登录")),e[19]||(e[19]=i("code",null,"Github",-1)),e[20]||(e[20]=s("和")),e[21]||(e[21]=i("code",null,"Linux",-1)),e[22]||(e[22]=s("中的免密登录方法差不多，具体可以查看")),t(o,{to:"/article/h609uylx.html"},{default:n(()=>e[16]||(e[16]=[s("Windows通过密钥访问github")])),_:1}),e[23]||(e[23]=s("。"))]),e[32]||(e[32]=i("h2",{id:"参考",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#参考"},[i("span",null,"参考")])],-1)),i("p",null,[t(o,{to:"/article/h609uylx.html"},{default:n(()=>e[24]||(e[24]=[s("Windows通过密钥访问github")])),_:1})]),i("p",null,[t(o,{to:"/github/ptv873ne.html"},{default:n(()=>e[25]||(e[25]=[s("Github Tokens")])),_:1})]),i("p",null,[t(o,{to:"/github/9f26um3n.html"},{default:n(()=>e[26]||(e[26]=[s("Github Secrets")])),_:1})]),i("p",null,[t(o,{to:"/github/sj4lt68r.html"},{default:n(()=>e[27]||(e[27]=[s("GitHub Actions")])),_:1})]),i("p",null,[t(o,{to:"/github/7oj1j32r.html"},{default:n(()=>e[28]||(e[28]=[s("GitHub Pages")])),_:1})]),e[33]||(e[33]=i("p",null,[i("a",{href:"https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"},"Github access token")],-1))])}const g=l(p,[["render",h],["__file","b2nplpqw.html.vue"]]),b=JSON.parse('{"path":"/github/b2nplpqw.html","title":"Github login","lang":"zh-CN","frontmatter":{"title":"Github login","createTime":"2025/01/13 19:11:52","permalink":"/github/b2nplpqw.html","tags":["Github"],"watermark":true},"headers":[],"readingTime":{"minutes":3.69,"words":1108},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/github/login.md","bulletin":false}');export{g as comp,b as data};
