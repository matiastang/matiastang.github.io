import{_ as r,c as o,a,o as c}from"./app-CS9K37Kg.js";const t={};function n(s,e){return c(),o("div",null,e[0]||(e[0]=[a('<p>LXC（Linux Containers）是一种基于 Linux 的内核级虚拟化技术。它将应用软件打包成一个软件容器，内含应用软件本身代码以及所需要的操作系统核心、相关依赖库，创造出应用程序独立的沙箱运行时环境。google 是 lxc 最大的支持者，k8s 未开源前在 google 内部使用的就是 lxc。</p><h2 id="docker-vs-lxc" tabindex="-1"><a class="header-anchor" href="#docker-vs-lxc"><span>Docker vs LXC</span></a></h2><p>Docker和LXC非常相似。它们都是<strong>用户空间和轻量级虚拟化平台</strong>，它们实现<strong>cgroup和名称空间来管理资源隔离</strong>。但是，两者之间存在许多明显的差异。</p><p>Docker与LXC的差异：</p><h3 id="使用范围" tabindex="-1"><a class="header-anchor" href="#使用范围"><span>使用范围</span></a></h3><p>LXC：Linux 环境。 Docker：Docker 可以在 Linux 上运行，也可以在Windows 上运行。并且支macos，因此 Docker 并不完全依赖于 Linux，而是本机使用它运行的操作系统。</p><h3 id="人气" tabindex="-1"><a class="header-anchor" href="#人气"><span>人气</span></a></h3><p>LXC：LXC 已经很老了，但由于一些限制，在开发人员和管理员中并没有得到多少普及。 Docker：Docker 使容器超越了操作系统级别，以自身合并应用程序的粒度。可以说 docker 是 LXC 的扩展，因此受到欢迎。</p><h3 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h3><p>LXC：LXC 工具与运行裸机服务器的传统系统管理员非常接近，即直接 SSH 访问，这允许使用团队可能在裸机或运行在其上的虚拟机上使用的自动化脚本Virtual Box 和任何其他虚拟化生产环境。这种可移植性功能使任何应用程序从传统 Linux 服务器迁移到在 LXC 容器上运行的过程非常无缝，但前提是尚未使用任何其他容器化解决方案，例如 dockers。 Docker：在 Docker 的情况下，工具以 Docker CLI（命令行界面）为中心，其中包含用于列出镜像、收集和处理 Docker 镜像的命令。Docker Hub 是一个公共镜像注册中心，可以为常用应用程序提供对可变数量镜像的访问。如果需要，您还可以下载所需的操作系统镜像，以便在 docker 容器上运行。例如，假设一个 Docker 容器中的 Linux 操作系统。这个特殊的功能通常与一些 LXC 容器相关联，这使我们能够在不需要 VM 的情况下运行操作系统。但是，Docker 容器在处理应用程序时重量更轻，以支持快速节奏，实现更高的可扩展性，并使用微服务架构部署所需的应用程序。</p><h3 id="生态" tabindex="-1"><a class="header-anchor" href="#生态"><span>生态</span></a></h3><p>LXC：不需要任何其他供应商来提供 LXC 的工具，因为我们已经在 Linux 上使用的生态系统也足以支持 LXC。 Docker：Docker 需要对庞大的生态系统提供更专业的支持。Docker 得到 AWS、IBM、Google 和 Microsoft Azure 等主要云提供商的支持。</p><p>Docker 生态系统包括：</p><ul><li>Docker Swarm 来管理 Docker 容器集群；</li><li>Docker Trusted Registry 用于管理 Docker 镜像的注册表；</li><li>Docker Compose 在需要交换数据的多个容器上启动多个应用程序</li><li>Docker Machine 创建启用 docker 的虚拟机。</li></ul><h3 id="使用便利" tabindex="-1"><a class="header-anchor" href="#使用便利"><span>使用便利</span></a></h3><p>LXC：从 VM 迁移到 LXC 非常容易，因为 LXC 为系统映像运行标准的 init，这使您可以在 docker 容器上运行。例如，更不用说 Docker 容器中的 Linux 操作系统。这个特殊的功能通常与一些 LXC 容器相关联，这使我们能够在不需要 VM 的情况下运行操作系统。 Docker：Docker 容器在处理应用程序时重量更轻，以支持快速节奏，实现更高的可扩展性，并使用微服务架构部署所需的应用程序。LXC 提供了 Linux 上 VE 的优势，主要是<strong>能够将私有工作负载相互隔离</strong>。与 <strong>VM 相比，它是一种更便宜、更快速的解决方案</strong>，但这样做需要一些额外的学习和专业知识。 Docker 是对 LXC 能力的重大改进，它的明显优势是因为<strong>足够简单学习成本低并不依赖操作系统</strong>。</p>',16)]))}const d=r(t,[["render",n],["__file","ddlgvk6z.html.vue"]]),l=JSON.parse('{"path":"/docker/ddlgvk6z.html","title":"LXC","lang":"zh-CN","frontmatter":{"title":"LXC","createTime":"2025/03/11 16:56:58","permalink":"/docker/ddlgvk6z.html","watermark":true},"headers":[],"readingTime":{"minutes":3.55,"words":1064},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/docker/LXC.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"154f33","sort":10010,"name":"docker"}],"bulletin":false}');export{d as comp,l as data};
