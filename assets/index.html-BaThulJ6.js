import{_ as e,c as s,a as n,o as r}from"./app-CS9K37Kg.js";const i="/framework/microfront/single-spa%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg",t="/framework/microfront/single-spa%E8%B7%AF%E7%94%B1%E5%8A%AB%E6%8C%81.jpg",l="/framework/microfront/single-spa%E5%BA%94%E7%94%A8%E5%8A%A0%E8%BD%BD.jpg",p={};function o(c,a){return r(),s("div",null,a[0]||(a[0]=[n('<h1 id="single-spa" tabindex="-1"><a class="header-anchor" href="#single-spa"><span>single-spa</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>2018年，single-spa诞生了，single-spa是一个小于5kb（gzip）npm包，用于协调微前端的挂载和卸载。只做两件事：</p><ul><li>提供生命周期，并负责调度子应用的生命周期。</li><li>挟持 url 变化，url 变化时匹配对应子应用，并执行生命周期流程。</li></ul><p>用于前端微服务化的JavaScript前端解决方案 (本身没有处理样式隔离、js执行隔离) ，实现了路由劫持和应用加载。</p><p>特点：</p><ul><li>在同一页面上使用多个框架而无需刷新页面</li><li>独立部署</li><li>使用新框架编写代码，无需重写现有应用程序</li><li>延迟加载代码以改善初始加载时间</li><li>本身没有处理样式隔离、js执行隔离，共用同一个window</li></ul><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h3><p><img src="'+i+'" alt="single-spa生命周期"></p><h3 id="路由挟持" tabindex="-1"><a class="header-anchor" href="#路由挟持"><span>路由挟持</span></a></h3><p><img src="'+t+'" alt="single-spa路由劫持"></p><h3 id="应用加载" tabindex="-1"><a class="header-anchor" href="#应用加载"><span>应用加载</span></a></h3><p><img src="'+l+'" alt="single-spa应用加载"></p><p>子应用挂载时，需要在mount方法中添加挂载逻辑 子应用卸载时，需要在unmount方法中添加卸载逻辑，在update方法中添加更新逻辑</p><p>single-spa的挂载、更新、卸载并未提供，而是需要用户自定实现。 single-spa 只起控制状态的作用，它自己本身不亲自操刀的，无论下载、挂载、卸载等，这样也能做到更好的扩展性，用户想怎么下载、挂载、卸载，他们自己来决定，只要你传入规范的参数即可。 single-spa为不同技术栈提供了一些逻辑抽象封装来对子应用进行包装。比如：single-spa-vue\\single-spa-react等。这些封装的模版里面对子应用进行包装，然后在对应的生命周期钩子函数执行子应用挂载卸载更新等操作。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>一般来说，微前端需要解决的问题分为两大类：</p><ul><li>应用的加载与切换：路由问题、应用入口、应用加载</li><li>应用的隔离与通信：js隔离、css样式隔离、应用间通信</li></ul><p>而single-spa则很好地解决了 路由问题、应用入口 两个问题，但是应用的加载并未实现。因此qiankun在此基础上封装了一个应用加载方案，并给出了js隔离、css样式隔离和应用间通信三个问题的解决方案，同时提供了预加载功能。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noopener noreferrer">single-spa</a><a href="https://single-spa.js.org/" target="_blank" rel="noopener noreferrer">single-spa文档</a><a href="https://cloud.tencent.com/developer/article/2135125" target="_blank" rel="noopener noreferrer">微前端——single-Spa</a></p>',22)]))}const d=e(p,[["render",o],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/article/ewyipwiy/","title":"single-spa","lang":"zh-CN","frontmatter":{"title":"single-spa","createTime":"2025/01/21 15:17:04","permalink":"/article/ewyipwiy/","watermark":true},"headers":[],"readingTime":{"minutes":2.31,"words":694},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/framework/microfront/single-spa.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"b81acd","sort":10061,"name":"framework"},{"id":"c01b75","sort":10062,"name":"microfront"}],"bulletin":false}');export{d as comp,m as data};
