import{_ as a,c as t,a as o,o as n}from"./app-CS9K37Kg.js";const i={};function s(r,e){return n(),t("div",null,e[0]||(e[0]=[o('<h1 id="m1芯片相关问题" tabindex="-1"><a class="header-anchor" href="#m1芯片相关问题"><span>M1芯片相关问题</span></a></h1><p>使用M1芯片MacBook时经常在终端中执行命令，使用一些不兼容arm架构的工具时，遇到因为架构不兼容报错的问题。</p><p>解决方案 可以尝试在终端中执行命令<code>arch -x86_64 zsh</code>来切换架构，可能可以解决一些问题。 <code>xcode command tool</code>默认使用的是<code>arm</code>版本的编译方式，而如果是<code>x86</code>架构，则需要通过环境变量指定使用何种架构。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>使用Mac M1，发现它安装python的一系列包是有所不同的，因为它本身是arm64，所以安装x86_64的包是肯定不行的。又因为我们用的miniforge3版本的conda（我理解类似arm版本），所以用conda install 安装的包基本上是arm版本的，例如用pip install pytorch肯定是用不起的，而用conda install -c conda-forge pytorch就行。 但是呢，这也不是绝对，像上面提到的cffi包，用pip安装反而能行。因此，在安装包的时候可以留意一下，该使用什么方式安装。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',4)]))}const d=a(i,[["render",s],["__file","index.html.vue"]]),l=JSON.parse('{"path":"/article/oo4yudyl/","title":"M1芯片相关问题","lang":"zh-CN","frontmatter":{"title":"M1芯片相关问题","createTime":"2025/01/21 15:30:36","permalink":"/article/oo4yudyl/","watermark":true},"headers":[],"readingTime":{"minutes":1.09,"words":328},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/M1芯片相关问题.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"0d4964","sort":10032,"name":"python"}],"bulletin":false}');export{d as comp,l as data};
