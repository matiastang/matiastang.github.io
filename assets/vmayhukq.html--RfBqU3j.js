import{_ as i,c as e,a,o as n}from"./app-CS9K37Kg.js";const d={};function l(c,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><code>cd</code>（<code>change directory</code>）命令用于改变当前工作目录的命令，切换到指定的路径。若目录名称省略，则变换至用户的 <code>home</code> 目录 (也就是刚 <code>login</code> 时所在的目录)。<code>~</code> 也表示用户的 home 目录，<code>.</code> 则是表示目前所在的目录，<code>..</code> 则表示目前目录位置的上一层目录。</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [dirName]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数：</p><ul><li><code>dirName</code>：要切换的目标目录，可以是<strong>绝对路径</strong>或<strong>相对路径</strong>。</li></ul><h2 id="常用参数" tabindex="-1"><a class="header-anchor" href="#常用参数"><span>常用参数</span></a></h2><ul><li><code>-</code>：回到上一次的目录</li><li><code>~</code>：回到 <code>home</code> 目录</li><li><code>~用户名</code>：切换到指定用户的 <code>home</code> 目录</li><li><code>.</code>：回到当前目录</li><li><code>..</code>：回到当前目录的上一级目录</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="一般shell-cli提示符中会显示当前位置" tabindex="-1"><a class="header-anchor" href="#一般shell-cli提示符中会显示当前位置"><span>一般<code>shell CLI</code>提示符中会显示当前位置</span></a></h3><p>如果你的<code>shell CLI</code>提示符中没有显示<code>shell</code>会话的当前位置，那是因为没有进行相关的配置。</p><h3 id="cd-绝对路径" tabindex="-1"><a class="header-anchor" href="#cd-绝对路径"><span><code>cd</code> 绝对路径</span></a></h3><p>用户可以在虚拟目录中采用<strong>绝对路径</strong>来引用目录名。绝对路径定义了在虚拟目录结构中，该目录从根目录开始的确切位置，相当于目录的全名</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="cd-相对路径" tabindex="-1"><a class="header-anchor" href="#cd-相对路径"><span><code>cd</code> 相对路径</span></a></h3><p><strong>相对路径</strong>允许你指定一个基于当前位置的目标路径。相对路径不以代表根目录的正斜线（/）开头，而是以目录名（如果你准备切换到当前工作目录下的某个目录的话）或是一个特殊字符开始</p><p>有两个特殊字符可用于相对路径中：</p><ul><li>单点号（<code>.</code>），表示当前目录。</li><li>双点号（<code>..</code>），表示当前目录的父目录。</li></ul><p><strong>提示</strong> 可以自己写脚本已支持过个点的返回。比如<code>cd ...</code>返回上上级目录，<code>cd ....</code>上上上级目录。</p><h3 id="多级返回" tabindex="-1"><a class="header-anchor" href="#多级返回"><span>多级返回</span></a></h3><p><code>cd</code>默认支持<code>.</code>和<code>..</code>这种相对路径返回，但是不支持<code>...</code>这种返回上两层目录，如果需要返回上两层目录，需要使用<code>cd ../../</code>。但在一些<code>sh</code>比如<code>zsh</code>中每多一个点就表示多一层目录，比如：<code>...</code>表示上两层目录。当然也可以自己编辑一个脚本实现这种功能，但麻烦所以建议使用<code>zsh</code>等。</p><p>下面在<code>zsh</code>中测试一下</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /usr/local/bin</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # cd到/usr/local/bin目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 切换到home目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 返回到上次的目录 /usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../../</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 返回到上两层目录来到 /usr</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> -</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 返回到上次的目录 /usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">/usr/local/bin</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ...</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 返回到上两层目录来到 /usr</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出在<code>zsh</code>中<code>cd ../../</code>和<code>cd ...</code>的效果是一样的，但是却简洁了很多。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://www.runoob.com/linux/linux-comm-cd.html" target="_blank" rel="noopener noreferrer">Linux cd 命令</a></p>`,26)]))}const h=i(d,[["render",l],["__file","vmayhukq.html.vue"]]),o=JSON.parse('{"path":"/linux/vmayhukq.html","title":"Linux cd","lang":"zh-CN","frontmatter":{"title":"Linux cd","createTime":"2025/01/11 16:30:29","permalink":"/linux/vmayhukq.html","watermark":true},"headers":[],"readingTime":{"minutes":2.35,"words":706},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/linux/cd.md","bulletin":false}');export{h as comp,o as data};
