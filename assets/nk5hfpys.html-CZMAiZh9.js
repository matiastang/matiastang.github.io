import{_ as e,c as a,a as i,o as n}from"./app-CS9K37Kg.js";const l={};function d(t,s){return n(),a("div",null,s[0]||(s[0]=[i(`<h1 id="前端缓存方案" tabindex="-1"><a class="header-anchor" href="#前端缓存方案"><span>前端缓存方案</span></a></h1><h2 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>Cookie</span></a></h2><h2 id="localstorage" tabindex="-1"><a class="header-anchor" href="#localstorage"><span>LocalStorage</span></a></h2><h2 id="sessionstorage" tabindex="-1"><a class="header-anchor" href="#sessionstorage"><span>SessionStorage</span></a></h2><h2 id="websql" tabindex="-1"><a class="header-anchor" href="#websql"><span>WebSQL</span></a></h2><p><a href="https://caniuse.com/?search=WebSQL" target="_blank" rel="noopener noreferrer">WebSQL 兼容性</a></p><h2 id="indexeddb" tabindex="-1"><a class="header-anchor" href="#indexeddb"><span>IndexedDB</span></a></h2><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p><code>IndexedDB</code> 是一种可以让你在用户的浏览器内持久化存储数据的方法， 允许储存大量数据，提供查找接口，还能建立索引。 <code>IndexedDB</code> 不属于关系型数据库（不支持 <code>SQL</code> 查询语句），更接近 <code>NoSQL</code> 数据库，可以简单认为是一个基于事务操作的 <code>key-value</code> 型前端数据库。 <code>IndexedDB</code> 的 <code>API</code> 大部分都是异步。<code>IndexedDB</code> 语法比较底层，可以使用一些基于 <code>IndexedDB</code> 封装的库。</p><h3 id="兼容性" tabindex="-1"><a class="header-anchor" href="#兼容性"><span>兼容性</span></a></h3><p><a href="https://caniuse.com/?search=IndexedDB" target="_blank" rel="noopener noreferrer">IndexedDB 兼容性</a>支持的还挺好的，除了<code>Opera Mini</code>，其他版本只要不是太老的版本，都是可以用的。</p><h3 id="容量" tabindex="-1"><a class="header-anchor" href="#容量"><span>容量</span></a></h3><p><code>IndexedDB</code> 的容量以 <code>Chrome</code> 为例：</p><p><code>Chrome67</code> 之前的版本是<code>50%</code>的硬盘空间。 <code>Chrome 67</code> 及之后的版本，需要区分<code>Chrome</code>的模式。</p><ol><li><code>Chrome</code> 正常模式</li></ol><p>如果命中了should remain available的值（这个值可以理解为浏览器需要留出来的空间，硬盘容量除去这个值以后的空间就是浏览器临时存储可用空间），则一个来源（“站点”）的配额将为零。 should remain available值与在大容量存储上保持空闲的空间有关。从Chrome 67开始，它是2 GB和大容量存储总容量的10％中的较低值。一旦达到此限制，对临时存储的其他写操作将失败，但是临时存储中的现有数据将不会被删除。如果尚未达到should remain available值，则配额将为共享池的20％。这表示 （Chrome已保存的临时存储中所有数据的大小，加上Chrome可以将所有数据保存到本地存储而不会达到should remain available值）的20％。比如我有一块 256GB 的硬盘，should remain available的值就是2GB，也就是浏览器临时存储空间是 254GB。如果这时候临时存储空间已经用了 4GB 了，这时候 IndexedDB 可用大小就是 50GB。我们可以从 chromium 的<a href="https://chromium.googlesource.com/chromium/src/%2B/refs/heads/master/storage/browser/quota/quota_settings.cc%2368" target="_blank" rel="noopener noreferrer">源码</a>以及<a href="https://developer.chrome.com/apps/offline_storage%23table" target="_blank" rel="noopener noreferrer">chrome developer 文档</a>看到相应的描述：</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// The amount of the device&#39;s storage the browser attempts to</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// keep free. If there is less than this amount of storage free</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// on the device, Chrome will grant 0 quota to origins.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// Prior to M66, this was 10% of total storage instead of a fixed value on</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// all devices. Now the minimum of a fixed value (2GB) and 10% is used to</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// limit the reserve on devices with plenty of storage, but scale down for</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// devices with extremely limited storage.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *   1TB storage -- min(100GB,2GB) = 2GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// * 500GB storage -- min(50GB,2GB) = 2GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *  64GB storage -- min(6GB,2GB) = 2GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *  16GB storage -- min(1.6GB,2GB) = 1.6GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *   8GB storage -- min(800MB,2GB) = 800MB</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int64_t</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kShouldRemainAvailableFixed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2048</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kMBytes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 2GB</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> double</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kShouldRemainAvailableRatio</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">              // 10%</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// The amount of the device&#39;s storage the browser attempts to</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// keep free at all costs. Data will be aggressively evicted.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// Prior to M66, this was 1% of total storage instead of a fixed value on</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// all devices. Now the minimum of a fixed value (1GB) and 1% is used to</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// limit the reserve on devices with plenty of storage, but scale down for</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// devices with extremely limited storage.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *   1TB storage -- min(10GB,1GB) = 1GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// * 500GB storage -- min(5GB,1GB) = 1GB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *  64GB storage -- min(640MB,1GB) = 640MB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *  16GB storage -- min(160MB,1GB) = 160MB</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// *   8GB storage -- min(80MB,1GB) = 80MB</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int64_t</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kMustRemainAvailableFixed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1024</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kMBytes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 1GB</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> double</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> kMustRemainAvailableRatio</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0.01</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">             // 1%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>Chrome</code> 隐身模式</li></ol><p><code>IndexedDB</code> 的容量是固定的 <code>100MB</code></p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><p><code>IndexedDB</code> 可以使用可以通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Basic_Concepts_Behind_IndexedDB" target="_blank" rel="noopener noreferrer"><code>MDN</code></a>、<a href="https://www.ruanyifeng.com/blog/2018/07/indexeddb.html" target="_blank" rel="noopener noreferrer"><code>浏览器数据库 IndexedDB 入门教程</code></a>、<a href="https://www.zhangxinxu.com/wordpress/2017/07/html5-indexeddb-js-example" target="_blank" rel="noopener noreferrer"><code>HTML5 indexedDB前端本地存储数据库实例教程</code></a>。</p><h3 id="基于-indexeddb-封装的库" tabindex="-1"><a class="header-anchor" href="#基于-indexeddb-封装的库"><span>基于 IndexedDB 封装的库</span></a></h3><p><a href="http://localforage.docschina.org/" target="_blank" rel="noopener noreferrer">localforage</a>: 一个提供 <code>name: value</code> 的简单语法的客户端数据存储垫片（<code>Polyfill</code>），它基于 <code>IndexedDB</code> 实现，并在不持支 <code>IndexedDB</code> 的浏览器中自动回退只 <code>WebSQL</code> 和 <code>localStorage</code>。 <a href="http//www.dexie.org">dexie.js</a>: 对 <code>IndexedDB</code> 的封装，通过提供更友好和简单语法以进行快速的编码开发。 <a href="https//github.com/erikolson186/zangodb">ZangoDB</a>: 一个类 <code>MongoDB</code> 的 <code>IndexedDB</code> 接口实现，提供了诸如过滤、投影、排序、更新和聚合等大多数 <code>MongoDB</code> 常见的特性。 <a href="http://jsstore.net" target="_blank" rel="noopener noreferrer">JsStore</a>: 一个具备类 <code>SQL</code> 语法的简单和先进的 <code>IndexedDB</code> 封装实现。</p><h2 id="方案比较" tabindex="-1"><a class="header-anchor" href="#方案比较"><span>方案比较</span></a></h2>`,24)]))}const h=e(l,[["render",d],["__file","nk5hfpys.html.vue"]]),o=JSON.parse('{"path":"/front/nk5hfpys.html","title":"前端缓存","lang":"zh-CN","frontmatter":{"title":"前端缓存","createTime":"2025/01/20 17:37:47","permalink":"/front/nk5hfpys.html","watermark":true},"headers":[],"readingTime":{"minutes":3.54,"words":1061},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/front/前端缓存.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"67ca11","sort":10006,"name":"front"}],"bulletin":false}');export{h as comp,o as data};
