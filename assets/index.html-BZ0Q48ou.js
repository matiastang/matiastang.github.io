import{_ as n,c as e,a,o as i}from"./app-CS9K37Kg.js";const l={};function p(t,s){return i(),e("div",null,s[0]||(s[0]=[a(`<h1 id="pipenv" tabindex="-1"><a class="header-anchor" href="#pipenv"><span>pipenv</span></a></h1><p><a href="https://cdn.modb.pro/db/29564" target="_blank" rel="noopener noreferrer">pipenv 使用</a></p><p><code>Python.org</code> 推荐的名为 <code>Pipenv</code> 的 <code>Python</code> 包管理器也可以用来安装 <code>Python</code> 应用。与 <code>Pip</code> 不同，<code>Pipenv</code> 默认会自动创建虚拟环境。这意味着你不再需要为项目手动创建虚拟环境。</p><p><code>Pipfile</code> 与 <code>Pipfile.lock</code> 是社区拟定的依赖管理文件，用于替代过于简陋的 <code>requirements.txt</code> 文件. 过去大家经常使用<code>virtualenv</code>来创建虚拟环境，通过<code>pip freeze</code>生成<code>requirements.txt</code>文件，然后通过<code>pip install -r requirements.txt</code>进行项目模块的管理与安装。这样的安装存在很多问题，比如每次更新模块后，需要手动的重新生成依赖文件，等等问题</p><ul><li>安装</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>pipx install pipenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加环境变量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>pipx ensurepath</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>刷新</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>source ~/.zshrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看版本</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ pipenv --version</span></span>
<span class="line"><span>pipenv, version 2021.5.29</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建虚拟环境" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境"><span>创建虚拟环境</span></a></h2><p>Pipenv的作用</p><p>可以利用pipenv来实现同时管理项目中的python虚拟环境和相关包依赖。</p><p>使用步骤</p><ul><li>指定<code>python</code>路径来创建虚拟环境，然后使用<code>pipenv shell</code>进入虚拟环境</li></ul><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pipenv</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --python</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /data/apps/py/python3.11.9/bin/python3.11</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>cmd中输入命令 pip install pipenv 安装pipenv cmd切换路径到需要建立虚拟环境的项目目录下 输入命令 pipenv install 开始安装虚拟环境 安装完毕后输入命令 pipenv shell 进入虚拟环境 Pipfile文件</p><p>虚拟环境安装完毕后项目目录中将创建Pipfile/Pipfile.lock两个文件 Pipfile：用于保存项目的python版本、依赖包等相关信息 Pipfile.lock：用于对Pipfile的锁定 Pipfile文件可以单独移放到其他项目内，用于项目虚拟环境的建立和依赖包的安装 常用命令</p><p>pipenv install： 若项目目录中虚拟环境未创建且无Pipfile文件，将安装虚拟环境并创建Pipfile文件 若项目目录中虚拟环境未创建且有Pipfile文件，将根据Pipfile文件来安装相应python版本和依赖包 若项目目录中虚拟环境已创建且有Pipfile文件，将根据Pipfile文件来安装依赖包</p><p>pipenv install xx:：安装python包 pipenv uninstall xx:：卸载python包 pipenv shell：进入虚拟环境(项目目录下) exit：退出虚拟环境 pipenv graph：显示包依赖关系 pipenv --venv：显示虚拟环境安装路径 执行 pipenv lock --clear 用于清空依赖缓存</p><h2 id="换源" tabindex="-1"><a class="header-anchor" href="#换源"><span>换源</span></a></h2><p><code>pipenv install ***</code>安装报错<code>ReadTimeoutError</code></p><p>是因为<code>pip</code>下载源默认设置为国外</p><p>解决办法是：</p><p>将<code>pip</code>下载源切换为国内地址：index-url = https://pypi.tuna.tsinghua.edu.cn/simple 修改当前目录下Pipfile文件，将[source]下的url属性改成国内的源即可：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>[[source]]</span></span>
<span class="line"><span>url = &quot;https://mirrors.aliyun.com/pypi/simple&quot;</span></span>
<span class="line"><span>verify_ssl = true</span></span>
<span class="line"><span>name = &quot;pypi&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><h3 id="python的版本问题导致locking-failed" tabindex="-1"><a class="header-anchor" href="#python的版本问题导致locking-failed"><span><code>python</code>的版本问题导致<code>Locking Failed!</code></span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Running $ pipenv lock then $ pipenv sync.</span></span>
<span class="line"><span>Locking [dev-packages] dependencies...</span></span>
<span class="line"><span>Locking [packages] dependencies...</span></span>
<span class="line"><span>Building requirements...</span></span>
<span class="line"><span>Resolving dependencies...</span></span>
<span class="line"><span>✘ Locking Failed!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://stackoverflow.com/questions/58280484/ssl-module-in-python-is-not-available-on-osx/60467942#60467942" target="_blank" rel="noopener noreferrer">stackoverflow</a></p><p><code>python</code>版本使用不对造成的</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ pipx list</span></span>
<span class="line"><span>venvs are in /Users/matias/.local/pipx/venvs</span></span>
<span class="line"><span>apps are exposed on your $PATH at /Users/matias/.local/bin</span></span>
<span class="line"><span>   package pipenv 2022.8.5, installed using Python 3.9.7</span></span>
<span class="line"><span>    - pipenv</span></span>
<span class="line"><span>    - pipenv-resolver</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>cd /Users/matias/.local/pipx/venvs </span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs  ll</span></span>
<span class="line"><span>total 0</span></span>
<span class="line"><span>drwxr-xr-x  7 matias  staff   224B  9 17  2021 pipenv</span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs  cd pipenv </span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs/pipenv  ll</span></span>
<span class="line"><span>total 16</span></span>
<span class="line"><span>drwxr-xr-x  13 matias  staff   416B  8  9 16:07 bin</span></span>
<span class="line"><span>drwxr-xr-x   2 matias  staff    64B  9 17  2021 include</span></span>
<span class="line"><span>drwxr-xr-x   3 matias  staff    96B  9 17  2021 lib</span></span>
<span class="line"><span>-rw-r--r--   1 matias  staff   1.3K  8  9 16:07 pipx_metadata.json</span></span>
<span class="line"><span>-rw-r--r--   1 matias  staff    93B  9 17  2021 pyvenv.cfg</span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs/pipenv  cat pyvenv.cfg </span></span>
<span class="line"><span>以前的配置，其中python用的3.9.7和当前环境使用的不一样，当前环境使用的是\`pyenv\`安装的\`python\`，应该是\`pipx\`安装\`pipenv\`时，还没有引入\`pyenv\`管理版本。</span></span>
<span class="line"><span>home = /opt/homebrew/opt/python@3.9/bin</span></span>
<span class="line"><span>include-system-site-packages = false</span></span>
<span class="line"><span>version = 3.9.7</span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs/pipenv  which python3</span></span>
<span class="line"><span>/Users/matias/.pyenv/shims/python3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改<code>pipenv</code>配置文件</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>(base)  ~/.local/pipx/venvs/pipenv  vim pyvenv.cfg </span></span>
<span class="line"><span>(base)  ~/.local/pipx/venvs/pipenv  cat pyvenv.cfg </span></span>
<span class="line"><span>home = /Users/matias/.pyenv/shims/python3</span></span>
<span class="line"><span>include-system-site-packages = false</span></span>
<span class="line"><span>version = 3.10.5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新添加则成功了</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>pipenv install Scrapy</span></span>
<span class="line"><span>Installing Scrapy...</span></span>
<span class="line"><span>Adding Scrapy to Pipfile&#39;s [packages]...</span></span>
<span class="line"><span>✔ Installation Succeeded </span></span>
<span class="line"><span>Pipfile.lock not found, creating...</span></span>
<span class="line"><span>Locking [dev-packages] dependencies...</span></span>
<span class="line"><span>Locking [packages] dependencies...</span></span>
<span class="line"><span>Building requirements...</span></span>
<span class="line"><span>Resolving dependencies...</span></span>
<span class="line"><span>✔ Success! </span></span>
<span class="line"><span>Updated Pipfile.lock (9ff1f9)!</span></span>
<span class="line"><span>Installing dependencies from Pipfile.lock (9ff1f9)...</span></span>
<span class="line"><span>  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 1/1 — 00:00:00</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="error-system-is" tabindex="-1"><a class="header-anchor" href="#error-system-is"><span><code>ERROR:: --system is</code></span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>pipenv --python 3.10                               </span></span>
<span class="line"><span>Usage: pipenv [OPTIONS] COMMAND [ARGS]...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ERROR:: --system is intended to be used for pre-existing Pipfile installation, not installation of specific packages. Aborting.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以先用rm（删除虚拟环境）清除之前的操作，再重新install：</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$ pipenv --rm</span></span>
<span class="line"><span>Removing virtualenv (/Users/matias/.local/share/virtualenvs/welfare-lottery-scrapy-Qkb1Kj8J)...</span></span>
<span class="line"><span>(mt_scrapy)  ~/matias/MT/MTGithub/scrapy/welfare-lottery-scrapy   main ±  pipenv install</span></span>
<span class="line"><span>Creating a virtualenv for this project...</span></span>
<span class="line"><span>Pipfile: /Users/matias/matias/MT/MTGithub/scrapy/welfare-lottery-scrapy/Pipfile</span></span>
<span class="line"><span>Using /Users/matias/.pyenv/versions/3.10.5/bin/python3 (3.10.5) to create virtualenv...</span></span>
<span class="line"><span>⠸ Creating virtual environment...created virtual environment CPython3.10.5.final.0-64 in 181ms</span></span>
<span class="line"><span>  creator CPython3Posix(dest=/Users/matias/.local/share/virtualenvs/welfare-lottery-scrapy-Qkb1Kj8J, clear=False, no_vcs_ignore=False, global=False)</span></span>
<span class="line"><span>  seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/Users/matias/Library/Application Support/virtualenv)</span></span>
<span class="line"><span>    added seed packages: pip==22.1.2, setuptools==63.1.0, wheel==0.37.1</span></span>
<span class="line"><span>  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator</span></span>
<span class="line"><span></span></span>
<span class="line"><span>✔ Successfully created virtual environment! </span></span>
<span class="line"><span>Virtualenv location: /Users/matias/.local/share/virtualenvs/welfare-lottery-scrapy-Qkb1Kj8J</span></span>
<span class="line"><span>Creating a Pipfile for this project...</span></span>
<span class="line"><span>Pipfile.lock not found, creating...</span></span>
<span class="line"><span>Locking [dev-packages] dependencies...</span></span>
<span class="line"><span>Locking [packages] dependencies...</span></span>
<span class="line"><span>Updated Pipfile.lock (e4eef2)!</span></span>
<span class="line"><span>Installing dependencies from Pipfile.lock (e4eef2)...</span></span>
<span class="line"><span>  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 0/0 — 00:00:00</span></span>
<span class="line"><span>To activate this project&#39;s virtualenv, run pipenv shell.</span></span>
<span class="line"><span>Alternatively, run a command inside the virtualenv with pipenv run.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43)]))}const c=n(l,[["render",p],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/gww4rd3y/","title":"pipenv","lang":"zh-CN","frontmatter":{"title":"pipenv","createTime":"2025/01/21 15:30:36","permalink":"/article/gww4rd3y/","watermark":true},"headers":[],"readingTime":{"minutes":4,"words":1201},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/python/pipenv.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"0d4964","sort":10032,"name":"python"}],"bulletin":false}');export{c as comp,r as data};
