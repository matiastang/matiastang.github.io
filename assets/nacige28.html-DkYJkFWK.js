import{_ as e,c as t,a as o,o as a}from"./app-CS9K37Kg.js";const n={};function S(c,p){return a(),t("div",null,p[0]||(p[0]=[o("<p>DNS缓存分类</p><p>（1）浏览器DNS缓存：浏览器会根据一定频率缓存DNS记录；</p><p>（2）本地DNS缓存：如果浏览器缓存中找不到解析记录，就会去询问操作系统中的缓存；</p><p>（3）本地HOSTS文件：HOSTS是记录域名与IP地址一一映射关系的本地文件，Windows系统中位于C:\\Windows\\System32\\drivers\\etc；</p><p>（4）路由器DNS缓存：我们常用的路由器也带有自动缓存功能，路由器DNS被篡改会造成域名劫持，将访问网址定位到另外一个服务器；</p><p>（5）递归服务器缓存：递归服务器在将解析结果告知客户端的同时，将记录缓存下来，当下次请求同一个域名时，直接会将记录返回，而无需再进行全球查询。</p><p>DNS解析顺序</p><p>DNS解析顺序是“先查缓存，再递归解析”，查询顺序为：浏览器缓存—系统缓存—路由器缓存—递归服务器缓存—递归查询。</p><p>我们以www.example.com这个域名为例进行查询，具体流程如下：</p><p>（1）搜索浏览器自带的DNS缓存</p><p>当收到访问请求后，浏览器首先会查询浏览器自身的DNS缓存，这个缓存时间比较短（chrome://net-internals/#dns 这里可以查询缓存的dns记录），且只能容纳 1000条缓存，如果缓存中有对应条目，返回结果，解析到此结束。</p><p>（2）查询操作系统缓存和hosts本地文件</p><p>如果浏览器缓存中没有找到对应条目（ipconfig /displaydns可以查看），操作系统也会有一个域名解析的过程，浏览器会先搜索操作系统的DNS缓存中是否有这个域名解析记录，如果有返回结果，解析结束。</p><p>此外，电脑本地文件HOSTS中可以设定域名到IP地址的指向关系。如果HOSTS文件中保存有该域名的记录，浏览器会首先使用这个IP地址，并将其结果缓存下来，缓存时间同样受域名失效时间和缓存空间大小决定。</p><p>（3）查询路由器缓存</p><p>如果浏览器和操作系统中没有域名解析记录，就会查询路由器中的DNS缓存，如果路由器DNS缓存中有解析条目，直接返回结果，解析结束。</p><p>（4）递归解析服务器缓存</p><p>如果本机和路由器DNS缓存中没有该域名的解析记录，浏览器就会向递归服务器发起请求，如果递归服务器缓存有该域名解析条目，返回结果，解析结束。</p><p>（5）查询根域名服务器</p><p>如果递归服务器缓存中没有结果，就会委托递归服务器发起全球查询，首先递归服务器会向根域名服务器发起解析请求。根域名服务器告知.com顶级域名服务器地址。</p><p>（6）查询顶级域名服务器</p><p>递归服务器向.com顶级域名服务器发起DNS请求，.com顶级服务器告知example.com所属权威域名服务器地址。</p><p>（7）查询权威域名服务器</p><p>递归服务器向example.com的权威域名服务器地址发起请求，权威服务器告知www.example.com所对应的IP地址。</p><p>（8）返回解析结果</p><p>得到www.example.com的IP地址后，递归服务器将结果告知客户端，客户端对该IP地址发起访问。整个DNS解析流程到此结束。</p><p>DNS重定向 这里顺便说一下DNS的重定向吧</p><p>DNS每次返回的ip地址可能会不一样，因为世界上不是只有一个机器可以处理&quot;http://baidu.com&quot;的这个请求，有很多机器可以处理，DNS只需要返回可以处理的机器的ip地址就可以了。例如可以根据每台机器的负载量， 该机器离用户地理位置的距离等等， 这种过程就是DNS负载均衡， 又叫做DNS重定向。 很简单，几个例子，比如我在故宫的北门，打开地图要查询故宫肯定会让我从北门进去。而如果我在故宫的南门，要导航到故宫就会让我从南门进去。</p><p>DNS污染 DNS 污染（DNS cache pollution）， 又称域名服务器缓存投毒（DNS cache poisoning）， 是指一些刻意制造或无意中制造出来的域名服务器数据包， 把域名指往不正确的IP地址。</p><p>某些网络运营商为了某些目的， 对DNS进行了某些操作， 导致上网的用户无法通过域名取得正确的IP地址。 某些国家或地区出于某些目的为了防止某网站被访问， 而且其又掌握部分国际DNS根目录服务器或镜像， 也会利用此方法进行屏蔽。 （Google、 Facebook等）</p><p>至于如果防止DNS污染， 这里只说一个方法就是修改hosts文件， 其他的自行搜索吧。</p>",31)]))}const m=e(n,[["render",S],["__file","nacige28.html.vue"]]),s=JSON.parse('{"path":"/network/nacige28.html","title":"DNS 缓存","lang":"zh-CN","frontmatter":{"title":"DNS 缓存","createTime":"2025/01/21 15:05:48","permalink":"/network/nacige28.html","watermark":true},"headers":[],"readingTime":{"minutes":4.44,"words":1332},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/network/DNS缓存.md","bulletin":false}');export{m as comp,s as data};
