import{_ as s,c as t,b as e,o}from"./app-CS9K37Kg.js";const i={};function a(l,r){return o(),t("div",null,r[0]||(r[0]=[e("h1",{id:"supervisor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#supervisor"},[e("span",null,"supervisor")])],-1),e("p",null,"Supervisor是一个用 Python 写的进程管理工具, 可以很方便的用来启动、重启、关闭进程（不仅仅是 Python 进程）. 除了对单个进程的控制, 还可以同时启动、关闭多个进程, 比如很不幸的服务器出问题导致所有应用程序都被杀死, 此时可以用 supervisor 同时启动所有应用 程序而不是一个一个地敲命令启动.",-1),e("p",null,"supervisord管理的进程必须由supervisord来启动, 并且管理的程序必须要是非Daemon程序, Supervisor会帮你把它转化为Daemon程序. 比如想要使用Supervisor来管理Nginx进程, 就必须在Nginx配置文件中加入 daemon off让Nginx以非Daemon方式运行.",-1),e("ol",null,[e("li",null,"安装 Supervisor 可以运行在 Linux、Mac OS X 上. 如前所述, supervisor 是 Python 编写的, 所以安装起来也很方便, 可以直接用pip或是用yum安装, 如果是 Ubuntu 系统, 还可以使用 apt-get 安装:")],-1),e("p",null,"$ pip install supervisor $ yum install supervisor $ sudo apt-get install supervisor",-1),e("ol",null,[e("li",null,"配置 Supervisor 相当强大, 提供了很丰富的功能, 不过大部分情况下只需要用到其中一小部分. 安装完成之后, 可以编写配置文件, 来满足自己的需求. 为了方便, 一般把配置分成两部分: supervisord本身的配置(也相当于全局配置)和待管理的应用程序自己的")],-1),e("p",null,"supervisor 是一个C/S模型的程序, supervisord是server端, 对应的有client端supervisorctl.",-1)]))}const u=s(i,[["render",a],["__file","83del1up.html.vue"]]),p=JSON.parse('{"path":"/article/83del1up.html","title":"supervisor管理进程","lang":"zh-CN","frontmatter":{"title":"supervisor管理进程","createTime":"2025/01/21 10:11:04","permalink":"/article/83del1up.html","watermark":true},"headers":[],"readingTime":{"minutes":1.44,"words":432},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/fastapi/supervisor管理进程.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"8ea922","sort":10008,"name":"fastapi"}],"bulletin":false}');export{u as comp,p as data};
