import{_ as t,c as r,b as e,o as i}from"./app-CS9K37Kg.js";const o={};function n(s,a){return i(),r("div",null,a[0]||(a[0]=[e("h1",{id:"rpc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rpc"},[e("span",null,"RPC")])],-1),e("p",null,"RPC 样式架构构建的基于 SOAP 的 Web 服务成为实现 SOA 最常用的方法。RPC 样式的 Web 服务客户端将一个装满数据的信封(包括方法和参数信息)通过 HTTP 发送到服务器。服务器打开信封并使用传入参数执行指定的方法。方法的结果打包到一个信封并作为响应发回客户端。客户端收到响应并打开信封。每个对象都有自己独特的方法以及仅公开一个 URI 的 RPC 样式 Web 服务，URI 表示单个端点。它忽略 HTTP 的大部分特性且仅支持 POST 方法。",-1),e("p",null,"在 RPC 样式的架构中，关注点在于方法，而在 REST 样式的架构中，关注点在于资源 -- 将使用标准方法检索并操作信息片段(使用表示的形式)。资源表示形式在表示形式中使用超链接互联。",-1),e("p",null,"Leonard Richardson 和 Sam Ruby 在他们的著作 RESTful Web Services 中引入了术语 REST-RPC 混合架构。REST-RPC 混合 Web 服务不使用信封包装方法、参数和数据，而是直接通过 HTTP 传输数据，这与 REST 样式的 Web 服务是类似的。但是它不使用标准的 HTTP 方法操作资源。它在 HTTP 请求的 URI 部分存储方法信息。好几个知名的 Web 服务，比如 Yahoo 的 Flickr API 和 Delicious API 都使用这种混合架构。",-1)]))}const l=t(o,[["render",n],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/article/is9e28k2/","title":"RPC","lang":"zh-CN","frontmatter":{"title":"RPC","createTime":"2025/01/21 15:16:14","permalink":"/article/is9e28k2/","watermark":true},"headers":[],"readingTime":{"minutes":1.37,"words":412},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/framework/microservice/RPC.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"b81acd","sort":10061,"name":"framework"},{"id":"97a7a0","sort":10063,"name":"microservice"}],"bulletin":false}');export{l as comp,m as data};
