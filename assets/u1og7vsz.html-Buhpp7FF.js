import{_ as p,c as h,a as l,b as e,e as a,f as t,r as d,o as r,d as n}from"./app-CS9K37Kg.js";const o={};function k(c,s){const i=d("RouteLink");return r(),h("div",null,[s[4]||(s[4]=l(`<p>在<code>Python</code>中我们可以使用<code>autopep8</code>来对我们的<code>.py</code>文件进行一些格式的自动修复。一般搭配<code>flake8</code>一起使用，使用<code>flake8</code>来检查代码规范，然后使用<code>autopep8</code>来修复代码格式。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> autopep8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>具体使用方法参考<a href="https://github.com/pre-commit/mirrors-autopep8" target="_blank" rel="noopener noreferrer">autopep8</a>。我这里主要说一下，结合<code>pre-commit</code>将<code>autopep8</code>集成到<code>git hooks</code>中，同时介绍一下在<code>VSCode</code>及<code>Cursor</code>中配置<code>setting.json</code>来实现保存文件自动修复格式。</p><h3 id="配置setting-json来实现保存文件自动修复格式" tabindex="-1"><a class="header-anchor" href="#配置setting-json来实现保存文件自动修复格式"><span>配置<code>setting.json</code>来实现保存文件自动修复格式</span></a></h3><ol><li>在编辑器安装<code>autopep8</code>插件</li></ol><p>在<code>VSCode</code>的插件模块中搜索<code>autopep8</code>，安装即可。</p><ol start="2"><li>在<code>setting.json</code>中配置<code>autopep8</code></li></ol><p>在<code>.vscode</code>目录的<code>setting.json</code>中添加如下配置：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">[python]</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">editor.formatOnSave</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">editor.formatOnType</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">editor.formatOnPaste</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">        &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">editor.defaultFormatter</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ms-python.autopep8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此我们就完成了<code>VSCode</code>中保存<code>Python</code>文件自动修复格式的配置。</p><p><strong>提示</strong> 如果没有对应文件夹或文件，可以直接创建。</p><h3 id="集成到git流程中" tabindex="-1"><a class="header-anchor" href="#集成到git流程中"><span>集成到<code>git</code>流程中</span></a></h3><ol><li>安装<code>pre-commit</code>。</li></ol><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>编写<code>pre-commit</code>的配置文件<code>.pre-commit-config.yaml</code>。</li></ol><div class="language-yml line-numbers-mode" data-ext="yml" data-title="yml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">repos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> repo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/pre-commit/mirrors-autopep8</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    rev</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">v2.0.4</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    hooks</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> autopep8</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        # autopep8 only takes one filename as argument unless the &quot;--in-place&quot; or &quot;--diff&quot; args are used</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">--max-line-length=120</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> --diff</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.添加<code>pre commit</code>到<code>git</code>钩子中</p><p>执行如下命令：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果已经添加过，但是更新了<code>.pre-commit-config.yaml</code>文件，可以直接更新。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> autoupdate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者，清除或卸载之后再添加。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clean</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> uninstall</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上面的命令后，<code>pre commit</code>就添加到<code>git</code>钩子中了。后续执行<code>git commit</code>命令时，就会触发<code>pre commit</code>，然后自动执行<code>autopep8</code>，修复<code>.py</code>文件。</p><h2 id="延伸阅读" tabindex="-1"><a class="header-anchor" href="#延伸阅读"><span>延伸阅读</span></a></h2>`,27)),e("p",null,[a(i,{to:"/article/u1og7vsz.html"},{default:t(()=>s[0]||(s[0]=[n("Python 格式自动修复")])),_:1})]),e("p",null,[a(i,{to:"/article/y8faf61c.html"},{default:t(()=>s[1]||(s[1]=[n("Python 格式校验")])),_:1})]),e("p",null,[a(i,{to:"/article/yukb34ys.html"},{default:t(()=>s[2]||(s[2]=[n("Python项目如何优雅的生成依赖文件")])),_:1})]),e("p",null,[a(i,{to:"/article/94w8v0n3.html"},{default:t(()=>s[3]||(s[3]=[n("整理头文件")])),_:1})]),s[5]||(s[5]=l('<h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://github.com/PyCQA/flake8" target="_blank" rel="noopener noreferrer">Github flake8</a></p><p><a href="https://github.com/pre-commit/pre-commit" target="_blank" rel="noopener noreferrer">Github pre-commit</a></p><p><a href="https://pre-commit.com" target="_blank" rel="noopener noreferrer">pre-commit文档</a></p>',4))])}const m=p(o,[["render",k],["__file","u1og7vsz.html.vue"]]),g=JSON.parse('{"path":"/article/u1og7vsz.html","title":"Python 格式自动修复","lang":"zh-CN","frontmatter":{"title":"Python 格式自动修复","createTime":"2025/01/17 13:54:43","permalink":"/article/u1og7vsz.html","tags":["Python"],"watermark":true},"headers":[],"readingTime":{"minutes":1.78,"words":535},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"python/格式自动修复.md","categoryList":[{"id":"23eeeb","sort":10032,"name":"python"}],"bulletin":false}');export{m as comp,g as data};
