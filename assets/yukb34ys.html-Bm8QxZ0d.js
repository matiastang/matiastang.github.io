import{_ as t,c as p,a as d,b as i,e as a,f as e,r as h,o as r,d as l}from"./app-CS9K37Kg.js";const c={};function k(o,s){const n=h("RouteLink");return r(),p("div",null,[s[4]||(s[4]=d(`<p>曾经以为项目的依赖文件是每个开发者默认都会生成的。直到我发现公司有些项目，竟然没有生成依赖文件！谁了解，运行报错，添加依赖，一直循环的痛苦。今天赋闲，那我们来聊聊Python项目如何优雅的生成依赖文件。</p><h2 id="使用命令生成依赖文件" tabindex="-1"><a class="header-anchor" href="#使用命令生成依赖文件"><span>使用命令生成依赖文件</span></a></h2><p>在<code>Python</code>项目中，生成依赖文件和通过依赖文件添加依赖都是非常方便的。</p><p>通过如下指令就生成了依赖文件<code>requirements.txt</code>。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freeze</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行了上面的命令后，就多了一个<code>requirements.txt</code>文件。文件内容格式如下：</p><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>annotated-types==0.7.0</span></span>
<span class="line"><span>anyio==4.6.2.post1</span></span>
<span class="line"><span>autopep8==2.3.1</span></span>
<span class="line"><span>certifi==2024.8.30</span></span>
<span class="line"><span>cfgv==3.4.0</span></span>
<span class="line"><span>chardet==5.2.0</span></span>
<span class="line"><span>charset-normalizer==3.4.0</span></span>
<span class="line"><span>click==8.1.7</span></span>
<span class="line"><span>distlib==0.3.9</span></span>
<span class="line"><span>docx==0.2.4</span></span>
<span class="line"><span>fastapi==0.115.2</span></span>
<span class="line"><span>filelock==3.16.1</span></span>
<span class="line"><span>flake8==7.1.1</span></span>
<span class="line"><span>flake8-chart==0.1.5</span></span>
<span class="line"><span>gunicorn==23.0.0</span></span>
<span class="line"><span>h11==0.14.0</span></span>
<span class="line"><span>hacking==7.0.0</span></span>
<span class="line"><span>identify==2.6.1</span></span>
<span class="line"><span>idna==3.10</span></span>
<span class="line"><span>importlib_metadata==8.5.0</span></span>
<span class="line"><span>isort==5.13.2</span></span>
<span class="line"><span>loguru==0.7.2</span></span>
<span class="line"><span>lxml==5.3.0</span></span>
<span class="line"><span>mccabe==0.7.0</span></span>
<span class="line"><span>mysql-connector-python==9.1.0</span></span>
<span class="line"><span>nodeenv==1.9.1</span></span>
<span class="line"><span>packaging==24.1</span></span>
<span class="line"><span>pillow==11.0.0</span></span>
<span class="line"><span>platformdirs==4.3.6</span></span>
<span class="line"><span>pre_commit==4.0.1</span></span>
<span class="line"><span>pycodestyle==2.12.1</span></span>
<span class="line"><span>pydantic==2.9.2</span></span>
<span class="line"><span>pydantic-settings==2.5.2</span></span>
<span class="line"><span>pydantic_core==2.23.4</span></span>
<span class="line"><span>pyflakes==3.2.0</span></span>
<span class="line"><span>pygal==3.0.5</span></span>
<span class="line"><span>python-docx==1.1.2</span></span>
<span class="line"><span>python-dotenv==1.0.1</span></span>
<span class="line"><span>python-multipart==0.0.12</span></span>
<span class="line"><span>PyYAML==6.0.2</span></span>
<span class="line"><span>redis==5.1.1</span></span>
<span class="line"><span>requests==2.32.3</span></span>
<span class="line"><span>sniffio==1.3.1</span></span>
<span class="line"><span>starlette==0.40.0</span></span>
<span class="line"><span>tenacity==9.0.0</span></span>
<span class="line"><span>typing_extensions==4.12.2</span></span>
<span class="line"><span>urllib3==2.2.3</span></span>
<span class="line"><span>uvicorn==0.32.0</span></span>
<span class="line"><span>virtualenv==20.26.6</span></span>
<span class="line"><span>zipp==3.20.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面是我手上一个真实项目的依赖文件内容，基本就是包和对应的版本号。</p><p>通过<code>requirements.txt</code>安装项目依赖，执行如下命令：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行上面命令就将<code>requirements.txt</code>的依赖，安装上了。</p><p><strong>注意</strong> 建议创建项目特有的虚拟环境，防止加入不必要的库到依赖文件中。</p><p><strong>注意</strong> <code>requirements.txt</code>只是习惯的依赖文件名称，也可以使用其他文件名称。</p><h2 id="结合git的pre-commit自动更新依赖文件" tabindex="-1"><a class="header-anchor" href="#结合git的pre-commit自动更新依赖文件"><span>结合<code>git</code>的<code>pre commit</code>自动更新依赖文件</span></a></h2><p>上面虽然实现了依赖文件的生成，每次更新都需要手动执行命令，不够优雅。那有没有办法自动生成依赖文件呢？答案是有，那就是结合<code>git</code>的<code>pre commit</code>自动更新依赖文件。</p><p>大概流程如下：</p><ol><li>安装<code>pre commit</code></li><li>编写生成依赖文件的脚本</li><li>配置<code>pre commit</code></li><li>添加<code>pre commit</code>到<code>git</code>钩子中</li></ol><h3 id="_1-安装pre-commit" tabindex="-1"><a class="header-anchor" href="#_1-安装pre-commit"><span>1.安装<code>pre commit</code></span></a></h3><p>首先需要安装<code>pre commit</code>，执行如下命令：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-编写生成依赖文件的脚本" tabindex="-1"><a class="header-anchor" href="#_2-编写生成依赖文件的脚本"><span>2.编写生成依赖文件的脚本</span></a></h3><p>这个脚本我们可以放在项目的指定目录下，我这里放在<code>/hooks/</code>文件夹下，命名为<code>auto-requirements.sh</code>。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/zsh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">###</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Author: matiastang</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Date: 2024-05-13 17:48:01</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @LastEditors: matiastang</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @LastEditTime: 2024-05-13 18:27:50</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @FilePath: /mt-langchain/hooks/auto-requirements.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Description: auto requirements</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">### </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 生成requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freeze</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个脚本这写了一条生成依赖文件的命令，当然如果有需要可以加其他命令。或者直接是其他任务，不一定是生成依赖文件。</p><p>最近使用<code>Cluade Code CLI</code>时，发现上面的脚本有一个问题，就是如果运行环境没有在正确的虚拟环境中，那么生成的依赖文件就会有问题。所以，我们需要在脚本中指定或进入虚拟环境，然后再生成依赖。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/zsh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">###</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Author: matiastang</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Date: 2024-05-13 17:48:01</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @LastEditors: matiastang</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @LastEditTime: 2024-05-13 18:27:50</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @FilePath: /mt-langchain/hooks/auto-requirements.sh</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # @Description: auto requirements</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">### </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 生成requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查是否存在虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -f</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./venv/bin/activate</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ];</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> then</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 使用项目虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./venv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freeze</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    deactivate</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">elif</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> -n</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$VIRTUAL_ENV</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ];</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> then</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 如果当前已在虚拟环境中</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    pip3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> freeze</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ./requirements.txt</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">else</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    # 没有虚拟环境时，跳过更新requirements.txt以避免污染</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">警告: 未检测到虚拟环境，跳过requirements.txt更新</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">请激活虚拟环境或创建./venv/虚拟环境后再运行</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    exit</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>我这里虚拟环境是在<code>./venv/</code>目录下，如果虚拟环境在其他目录下，更新为其他目录即可。如果使用其他虚拟环境管理工具，比如<code>conda</code>、<code>UV</code>等，那么需要更新为对应的命令。</p></div><h3 id="_3-配置pre-commit" tabindex="-1"><a class="header-anchor" href="#_3-配置pre-commit"><span>3.配置<code>pre commit</code></span></a></h3><p>在项目根目录下创建<code>.pre-commit-config.yaml</code>文件，文件内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yaml" data-title="yaml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">repos</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> repo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> local</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    hooks</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      -</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> auto-requirements</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> auto requirements</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        entry</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /bin/zsh ./hooks/auto-requirements.sh</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        language</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> system</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        pass_filenames</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        always_run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>entry: /bin/zsh ./hooks/auto-requirements.sh</code>就表示执行<code>auto-requirements.sh</code>脚本。</p><h3 id="_4-添加pre-commit到git钩子中" tabindex="-1"><a class="header-anchor" href="#_4-添加pre-commit到git钩子中"><span>4.添加<code>pre commit</code>到<code>git</code>钩子中</span></a></h3><p>执行如下命令：</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果已经添加过，但是更新了<code>.pre-commit-config.yaml</code>文件，可以直接更新。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> autoupdate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者，清除或卸载之后再添加。</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clean</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> uninstall</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pre-commit</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完上面的命令后，<code>pre commit</code>就添加到<code>git</code>钩子中了。后续执行<code>git commit</code>命令时，就会触发<code>pre commit</code>，然后自动执行<code>auto-requirements.sh</code>脚本，生成依赖文件。如果依赖没有变更，那么文件就不会改变，不会产生新的记录，可以放心使用。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>自动生成依赖，省去了手动生成依赖的麻烦，而且每次提交代码都会自动生成依赖文件，再也不用担心依赖文件遗漏了。但有一点儿还是需要注意，<strong>虚拟环境不要弄错了</strong>。</p><h2 id="延伸阅读" tabindex="-1"><a class="header-anchor" href="#延伸阅读"><span>延伸阅读</span></a></h2>`,42)),i("p",null,[a(n,{to:"/article/u1og7vsz.html"},{default:e(()=>s[0]||(s[0]=[l("Python 格式自动修复")])),_:1})]),i("p",null,[a(n,{to:"/article/y8faf61c.html"},{default:e(()=>s[1]||(s[1]=[l("Python 格式校验")])),_:1})]),i("p",null,[a(n,{to:"/article/yukb34ys.html"},{default:e(()=>s[2]||(s[2]=[l("Python项目如何优雅的生成依赖文件")])),_:1})]),i("p",null,[a(n,{to:"/article/94w8v0n3.html"},{default:e(()=>s[3]||(s[3]=[l("整理头文件")])),_:1})]),s[5]||(s[5]=i("h2",{id:"参考",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#参考"},[i("span",null,"参考")])],-1)),s[6]||(s[6]=i("p",null,[i("a",{href:"https://github.com/pre-commit/pre-commit",target:"_blank",rel:"noopener noreferrer"},"Github pre-commit")],-1)),s[7]||(s[7]=i("p",null,[i("a",{href:"https://pre-commit.com",target:"_blank",rel:"noopener noreferrer"},"pre-commit文档")],-1))])}const v=t(c,[["render",k],["__file","yukb34ys.html.vue"]]),u=JSON.parse('{"path":"/article/yukb34ys.html","title":"Python项目如何优雅的生成依赖文件","lang":"zh-CN","frontmatter":{"title":"Python项目如何优雅的生成依赖文件","createTime":"2025/01/06 18:03:59","permalink":"/article/yukb34ys.html","tags":["Python"],"watermark":true},"headers":[],"readingTime":{"minutes":4.54,"words":1361},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"python/如何优雅的生成依赖文件.md","categoryList":[{"id":"23eeeb","sort":10032,"name":"python"}],"bulletin":false}');export{v as comp,u as data};
