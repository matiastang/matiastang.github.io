import{_ as e,c as i,a,o as t}from"./app-CS9K37Kg.js";const n={};function l(h,s){return t(),i("div",null,s[0]||(s[0]=[a(`<h1 id="shell函数" tabindex="-1"><a class="header-anchor" href="#shell函数"><span>Shell函数</span></a></h1><p><a href="https://www.cnblogs.com/ericz2j/p/12045667.html" target="_blank" rel="noopener noreferrer">Shell函数</a></p><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><ul><li>函数创建</li></ul><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#!/bin/zsh -v</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># shellFunc.sh</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> mt_test</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello, test</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mt_run</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">hello, run</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>函数定义的位置一定要在使用到该函数的位置之前。</p><ul><li>退出状态码</li></ul><p>默认情况下，函数的退出状态码是函数中最后一条命令返回的退出状态码。在函数执行结束后，可以用标准变量<code>$?</code>来确定函数的退出状态码。如果函数中的最后一条命令成功运行则退出码是<code>1</code>否则是<code>0</code>。</p><p><code>return</code>命令来退出函数并返回特定的退出状态码。<code>return</code>命令允许指定一个整数值来定义函数的退出状态码，从而提供了一种简单的途径来编程设定函数退出状态码。 但当用<code>return</code>这种方法从函数中返回值时，要小心了。记住下面两条技巧来避免问题：</p><ul><li>函数一结束就取返回值；</li><li>退出状态码必须是0~255。</li></ul><h2 id="函数传参" tabindex="-1"><a class="header-anchor" href="#函数传参"><span>函数传参</span></a></h2><p>在Shell中，调用函数时可以向其传递参数。在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数。 <strong>注意</strong>，<code>$10</code> 不能获取第十个参数，获取第十个参数需要<code>\${10}</code>。当n&gt;=10时，需要使用<code>\${n}</code>来获取参数。</p><h2 id="常用变量" tabindex="-1"><a class="header-anchor" href="#常用变量"><span>常用变量</span></a></h2><table><thead><tr><th>特殊变量</th><th>说明</th></tr></thead><tbody><tr><td>$#</td><td>传递给函数的参数个数。</td></tr><tr><td>$*</td><td>显示所有传递给函数的参数。</td></tr><tr><td>$@</td><td>与$*相同，但是略有区别，请查看Shell特殊变量。</td></tr><tr><td>$?</td><td>函数的返回值。</td></tr></tbody></table>`,14)]))}const r=e(n,[["render",l],["__file","7pqype2n.html.vue"]]),p=JSON.parse('{"path":"/shell/7pqype2n.html","title":"Shell 函数","lang":"zh-CN","frontmatter":{"title":"Shell 函数","createTime":"2025/01/21 15:34:49","permalink":"/shell/7pqype2n.html","watermark":true},"headers":[],"readingTime":{"minutes":1.47,"words":440},"git":{"updatedTime":1755670488000,"contributors":[{"name":"唐道勇","username":"唐道勇","email":"matias@tangdaoyongdeMacBook-Pro.local","commits":1,"avatar":"https://avatars.githubusercontent.com/唐道勇?v=4","url":"https://github.com/唐道勇"}]},"filePathRelative":"notes/shell/Shell函数.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"cddda9","sort":10051,"name":"shell"}],"bulletin":false}');export{r as comp,p as data};
